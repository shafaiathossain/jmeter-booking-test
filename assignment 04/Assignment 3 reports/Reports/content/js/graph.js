/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 274.0, "minX": 0.0, "maxY": 7287.0, "series": [{"data": [[0.0, 1103.0], [0.1, 1103.0], [0.2, 1104.0], [0.3, 1104.0], [0.4, 1105.0], [0.5, 1105.0], [0.6, 1105.0], [0.7, 1105.0], [0.8, 1105.0], [0.9, 1106.0], [1.0, 1106.0], [1.1, 1106.0], [1.2, 1106.0], [1.3, 1107.0], [1.4, 1107.0], [1.5, 1107.0], [1.6, 1107.0], [1.7, 1107.0], [1.8, 1107.0], [1.9, 1107.0], [2.0, 1108.0], [2.1, 1108.0], [2.2, 1108.0], [2.3, 1108.0], [2.4, 1108.0], [2.5, 1108.0], [2.6, 1108.0], [2.7, 1109.0], [2.8, 1109.0], [2.9, 1109.0], [3.0, 1109.0], [3.1, 1109.0], [3.2, 1110.0], [3.3, 1110.0], [3.4, 1110.0], [3.5, 1110.0], [3.6, 1110.0], [3.7, 1111.0], [3.8, 1111.0], [3.9, 1111.0], [4.0, 1112.0], [4.1, 1112.0], [4.2, 1112.0], [4.3, 1112.0], [4.4, 1113.0], [4.5, 1113.0], [4.6, 1113.0], [4.7, 1113.0], [4.8, 1113.0], [4.9, 1113.0], [5.0, 1114.0], [5.1, 1114.0], [5.2, 1114.0], [5.3, 1114.0], [5.4, 1114.0], [5.5, 1114.0], [5.6, 1115.0], [5.7, 1115.0], [5.8, 1115.0], [5.9, 1115.0], [6.0, 1115.0], [6.1, 1115.0], [6.2, 1115.0], [6.3, 1115.0], [6.4, 1115.0], [6.5, 1116.0], [6.6, 1116.0], [6.7, 1116.0], [6.8, 1116.0], [6.9, 1116.0], [7.0, 1116.0], [7.1, 1116.0], [7.2, 1117.0], [7.3, 1117.0], [7.4, 1117.0], [7.5, 1117.0], [7.6, 1117.0], [7.7, 1117.0], [7.8, 1117.0], [7.9, 1117.0], [8.0, 1117.0], [8.1, 1117.0], [8.2, 1118.0], [8.3, 1118.0], [8.4, 1118.0], [8.5, 1118.0], [8.6, 1118.0], [8.7, 1118.0], [8.8, 1118.0], [8.9, 1118.0], [9.0, 1118.0], [9.1, 1118.0], [9.2, 1118.0], [9.3, 1118.0], [9.4, 1118.0], [9.5, 1118.0], [9.6, 1118.0], [9.7, 1118.0], [9.8, 1118.0], [9.9, 1119.0], [10.0, 1119.0], [10.1, 1119.0], [10.2, 1119.0], [10.3, 1119.0], [10.4, 1119.0], [10.5, 1119.0], [10.6, 1119.0], [10.7, 1119.0], [10.8, 1119.0], [10.9, 1119.0], [11.0, 1119.0], [11.1, 1119.0], [11.2, 1119.0], [11.3, 1119.0], [11.4, 1119.0], [11.5, 1120.0], [11.6, 1120.0], [11.7, 1120.0], [11.8, 1120.0], [11.9, 1120.0], [12.0, 1120.0], [12.1, 1120.0], [12.2, 1120.0], [12.3, 1120.0], [12.4, 1120.0], [12.5, 1120.0], [12.6, 1121.0], [12.7, 1121.0], [12.8, 1121.0], [12.9, 1121.0], [13.0, 1121.0], [13.1, 1121.0], [13.2, 1121.0], [13.3, 1121.0], [13.4, 1121.0], [13.5, 1121.0], [13.6, 1121.0], [13.7, 1121.0], [13.8, 1121.0], [13.9, 1121.0], [14.0, 1121.0], [14.1, 1121.0], [14.2, 1122.0], [14.3, 1122.0], [14.4, 1122.0], [14.5, 1122.0], [14.6, 1122.0], [14.7, 1122.0], [14.8, 1122.0], [14.9, 1122.0], [15.0, 1122.0], [15.1, 1122.0], [15.2, 1123.0], [15.3, 1123.0], [15.4, 1123.0], [15.5, 1123.0], [15.6, 1123.0], [15.7, 1123.0], [15.8, 1123.0], [15.9, 1123.0], [16.0, 1123.0], [16.1, 1124.0], [16.2, 1124.0], [16.3, 1124.0], [16.4, 1124.0], [16.5, 1124.0], [16.6, 1124.0], [16.7, 1124.0], [16.8, 1124.0], [16.9, 1124.0], [17.0, 1124.0], [17.1, 1124.0], [17.2, 1124.0], [17.3, 1124.0], [17.4, 1125.0], [17.5, 1125.0], [17.6, 1125.0], [17.7, 1125.0], [17.8, 1125.0], [17.9, 1125.0], [18.0, 1125.0], [18.1, 1125.0], [18.2, 1126.0], [18.3, 1126.0], [18.4, 1126.0], [18.5, 1126.0], [18.6, 1126.0], [18.7, 1126.0], [18.8, 1126.0], [18.9, 1126.0], [19.0, 1126.0], [19.1, 1126.0], [19.2, 1126.0], [19.3, 1126.0], [19.4, 1126.0], [19.5, 1126.0], [19.6, 1127.0], [19.7, 1127.0], [19.8, 1127.0], [19.9, 1127.0], [20.0, 1127.0], [20.1, 1127.0], [20.2, 1127.0], [20.3, 1127.0], [20.4, 1127.0], [20.5, 1127.0], [20.6, 1127.0], [20.7, 1127.0], [20.8, 1127.0], [20.9, 1127.0], [21.0, 1127.0], [21.1, 1127.0], [21.2, 1127.0], [21.3, 1128.0], [21.4, 1128.0], [21.5, 1128.0], [21.6, 1128.0], [21.7, 1128.0], [21.8, 1128.0], [21.9, 1128.0], [22.0, 1128.0], [22.1, 1128.0], [22.2, 1128.0], [22.3, 1128.0], [22.4, 1129.0], [22.5, 1129.0], [22.6, 1129.0], [22.7, 1129.0], [22.8, 1129.0], [22.9, 1129.0], [23.0, 1129.0], [23.1, 1129.0], [23.2, 1129.0], [23.3, 1129.0], [23.4, 1129.0], [23.5, 1129.0], [23.6, 1129.0], [23.7, 1130.0], [23.8, 1130.0], [23.9, 1130.0], [24.0, 1130.0], [24.1, 1130.0], [24.2, 1130.0], [24.3, 1130.0], [24.4, 1130.0], [24.5, 1130.0], [24.6, 1130.0], [24.7, 1130.0], [24.8, 1130.0], [24.9, 1130.0], [25.0, 1130.0], [25.1, 1130.0], [25.2, 1131.0], [25.3, 1131.0], [25.4, 1131.0], [25.5, 1131.0], [25.6, 1131.0], [25.7, 1131.0], [25.8, 1131.0], [25.9, 1131.0], [26.0, 1131.0], [26.1, 1131.0], [26.2, 1131.0], [26.3, 1132.0], [26.4, 1132.0], [26.5, 1132.0], [26.6, 1132.0], [26.7, 1132.0], [26.8, 1132.0], [26.9, 1132.0], [27.0, 1132.0], [27.1, 1132.0], [27.2, 1132.0], [27.3, 1132.0], [27.4, 1132.0], [27.5, 1133.0], [27.6, 1133.0], [27.7, 1133.0], [27.8, 1133.0], [27.9, 1133.0], [28.0, 1133.0], [28.1, 1133.0], [28.2, 1133.0], [28.3, 1133.0], [28.4, 1133.0], [28.5, 1133.0], [28.6, 1133.0], [28.7, 1133.0], [28.8, 1133.0], [28.9, 1133.0], [29.0, 1134.0], [29.1, 1134.0], [29.2, 1134.0], [29.3, 1134.0], [29.4, 1134.0], [29.5, 1134.0], [29.6, 1134.0], [29.7, 1134.0], [29.8, 1134.0], [29.9, 1134.0], [30.0, 1134.0], [30.1, 1135.0], [30.2, 1135.0], [30.3, 1135.0], [30.4, 1135.0], [30.5, 1135.0], [30.6, 1135.0], [30.7, 1135.0], [30.8, 1135.0], [30.9, 1135.0], [31.0, 1136.0], [31.1, 1136.0], [31.2, 1136.0], [31.3, 1136.0], [31.4, 1136.0], [31.5, 1136.0], [31.6, 1136.0], [31.7, 1136.0], [31.8, 1137.0], [31.9, 1137.0], [32.0, 1137.0], [32.1, 1137.0], [32.2, 1137.0], [32.3, 1137.0], [32.4, 1137.0], [32.5, 1137.0], [32.6, 1137.0], [32.7, 1137.0], [32.8, 1137.0], [32.9, 1137.0], [33.0, 1138.0], [33.1, 1138.0], [33.2, 1138.0], [33.3, 1138.0], [33.4, 1138.0], [33.5, 1139.0], [33.6, 1139.0], [33.7, 1139.0], [33.8, 1139.0], [33.9, 1139.0], [34.0, 1139.0], [34.1, 1140.0], [34.2, 1140.0], [34.3, 1140.0], [34.4, 1140.0], [34.5, 1140.0], [34.6, 1140.0], [34.7, 1140.0], [34.8, 1140.0], [34.9, 1140.0], [35.0, 1140.0], [35.1, 1141.0], [35.2, 1141.0], [35.3, 1141.0], [35.4, 1141.0], [35.5, 1141.0], [35.6, 1141.0], [35.7, 1141.0], [35.8, 1142.0], [35.9, 1142.0], [36.0, 1142.0], [36.1, 1142.0], [36.2, 1142.0], [36.3, 1143.0], [36.4, 1143.0], [36.5, 1144.0], [36.6, 1144.0], [36.7, 1144.0], [36.8, 1144.0], [36.9, 1144.0], [37.0, 1145.0], [37.1, 1145.0], [37.2, 1145.0], [37.3, 1145.0], [37.4, 1145.0], [37.5, 1145.0], [37.6, 1145.0], [37.7, 1145.0], [37.8, 1145.0], [37.9, 1145.0], [38.0, 1146.0], [38.1, 1146.0], [38.2, 1146.0], [38.3, 1146.0], [38.4, 1146.0], [38.5, 1146.0], [38.6, 1146.0], [38.7, 1147.0], [38.8, 1147.0], [38.9, 1147.0], [39.0, 1147.0], [39.1, 1147.0], [39.2, 1148.0], [39.3, 1148.0], [39.4, 1148.0], [39.5, 1148.0], [39.6, 1148.0], [39.7, 1148.0], [39.8, 1148.0], [39.9, 1149.0], [40.0, 1149.0], [40.1, 1150.0], [40.2, 1150.0], [40.3, 1150.0], [40.4, 1151.0], [40.5, 1151.0], [40.6, 1152.0], [40.7, 1152.0], [40.8, 1152.0], [40.9, 1152.0], [41.0, 1153.0], [41.1, 1153.0], [41.2, 1153.0], [41.3, 1153.0], [41.4, 1154.0], [41.5, 1156.0], [41.6, 1157.0], [41.7, 1157.0], [41.8, 1158.0], [41.9, 1158.0], [42.0, 1158.0], [42.1, 1158.0], [42.2, 1159.0], [42.3, 1161.0], [42.4, 1162.0], [42.5, 1163.0], [42.6, 1164.0], [42.7, 1166.0], [42.8, 1168.0], [42.9, 1170.0], [43.0, 1173.0], [43.1, 1173.0], [43.2, 1173.0], [43.3, 1174.0], [43.4, 1175.0], [43.5, 1175.0], [43.6, 1175.0], [43.7, 1175.0], [43.8, 1176.0], [43.9, 1176.0], [44.0, 1176.0], [44.1, 1176.0], [44.2, 1177.0], [44.3, 1177.0], [44.4, 1177.0], [44.5, 1177.0], [44.6, 1178.0], [44.7, 1178.0], [44.8, 1178.0], [44.9, 1178.0], [45.0, 1178.0], [45.1, 1178.0], [45.2, 1178.0], [45.3, 1178.0], [45.4, 1179.0], [45.5, 1179.0], [45.6, 1179.0], [45.7, 1179.0], [45.8, 1179.0], [45.9, 1179.0], [46.0, 1179.0], [46.1, 1179.0], [46.2, 1180.0], [46.3, 1180.0], [46.4, 1180.0], [46.5, 1180.0], [46.6, 1180.0], [46.7, 1180.0], [46.8, 1180.0], [46.9, 1181.0], [47.0, 1181.0], [47.1, 1181.0], [47.2, 1181.0], [47.3, 1182.0], [47.4, 1182.0], [47.5, 1182.0], [47.6, 1182.0], [47.7, 1182.0], [47.8, 1183.0], [47.9, 1183.0], [48.0, 1183.0], [48.1, 1183.0], [48.2, 1184.0], [48.3, 1184.0], [48.4, 1184.0], [48.5, 1185.0], [48.6, 1185.0], [48.7, 1185.0], [48.8, 1185.0], [48.9, 1185.0], [49.0, 1185.0], [49.1, 1185.0], [49.2, 1185.0], [49.3, 1185.0], [49.4, 1185.0], [49.5, 1186.0], [49.6, 1186.0], [49.7, 1186.0], [49.8, 1186.0], [49.9, 1186.0], [50.0, 1186.0], [50.1, 1186.0], [50.2, 1186.0], [50.3, 1186.0], [50.4, 1186.0], [50.5, 1186.0], [50.6, 1186.0], [50.7, 1187.0], [50.8, 1187.0], [50.9, 1187.0], [51.0, 1187.0], [51.1, 1187.0], [51.2, 1187.0], [51.3, 1187.0], [51.4, 1187.0], [51.5, 1187.0], [51.6, 1188.0], [51.7, 1188.0], [51.8, 1188.0], [51.9, 1188.0], [52.0, 1188.0], [52.1, 1188.0], [52.2, 1188.0], [52.3, 1188.0], [52.4, 1188.0], [52.5, 1188.0], [52.6, 1188.0], [52.7, 1188.0], [52.8, 1188.0], [52.9, 1188.0], [53.0, 1188.0], [53.1, 1189.0], [53.2, 1189.0], [53.3, 1189.0], [53.4, 1189.0], [53.5, 1189.0], [53.6, 1189.0], [53.7, 1189.0], [53.8, 1189.0], [53.9, 1189.0], [54.0, 1189.0], [54.1, 1189.0], [54.2, 1189.0], [54.3, 1189.0], [54.4, 1189.0], [54.5, 1190.0], [54.6, 1190.0], [54.7, 1190.0], [54.8, 1190.0], [54.9, 1190.0], [55.0, 1190.0], [55.1, 1190.0], [55.2, 1190.0], [55.3, 1190.0], [55.4, 1190.0], [55.5, 1190.0], [55.6, 1190.0], [55.7, 1190.0], [55.8, 1190.0], [55.9, 1190.0], [56.0, 1190.0], [56.1, 1191.0], [56.2, 1191.0], [56.3, 1191.0], [56.4, 1191.0], [56.5, 1191.0], [56.6, 1191.0], [56.7, 1191.0], [56.8, 1191.0], [56.9, 1191.0], [57.0, 1191.0], [57.1, 1191.0], [57.2, 1191.0], [57.3, 1191.0], [57.4, 1191.0], [57.5, 1191.0], [57.6, 1192.0], [57.7, 1192.0], [57.8, 1192.0], [57.9, 1192.0], [58.0, 1192.0], [58.1, 1192.0], [58.2, 1192.0], [58.3, 1192.0], [58.4, 1192.0], [58.5, 1192.0], [58.6, 1192.0], [58.7, 1192.0], [58.8, 1192.0], [58.9, 1192.0], [59.0, 1192.0], [59.1, 1192.0], [59.2, 1192.0], [59.3, 1193.0], [59.4, 1193.0], [59.5, 1193.0], [59.6, 1193.0], [59.7, 1193.0], [59.8, 1193.0], [59.9, 1193.0], [60.0, 1193.0], [60.1, 1193.0], [60.2, 1193.0], [60.3, 1193.0], [60.4, 1193.0], [60.5, 1193.0], [60.6, 1193.0], [60.7, 1193.0], [60.8, 1193.0], [60.9, 1194.0], [61.0, 1194.0], [61.1, 1194.0], [61.2, 1194.0], [61.3, 1194.0], [61.4, 1194.0], [61.5, 1194.0], [61.6, 1194.0], [61.7, 1194.0], [61.8, 1194.0], [61.9, 1195.0], [62.0, 1195.0], [62.1, 1195.0], [62.2, 1195.0], [62.3, 1195.0], [62.4, 1195.0], [62.5, 1195.0], [62.6, 1195.0], [62.7, 1195.0], [62.8, 1195.0], [62.9, 1195.0], [63.0, 1195.0], [63.1, 1196.0], [63.2, 1196.0], [63.3, 1196.0], [63.4, 1196.0], [63.5, 1196.0], [63.6, 1196.0], [63.7, 1196.0], [63.8, 1196.0], [63.9, 1196.0], [64.0, 1196.0], [64.1, 1197.0], [64.2, 1197.0], [64.3, 1197.0], [64.4, 1197.0], [64.5, 1197.0], [64.6, 1197.0], [64.7, 1197.0], [64.8, 1197.0], [64.9, 1197.0], [65.0, 1197.0], [65.1, 1197.0], [65.2, 1198.0], [65.3, 1198.0], [65.4, 1198.0], [65.5, 1198.0], [65.6, 1198.0], [65.7, 1198.0], [65.8, 1198.0], [65.9, 1198.0], [66.0, 1198.0], [66.1, 1198.0], [66.2, 1198.0], [66.3, 1198.0], [66.4, 1198.0], [66.5, 1198.0], [66.6, 1198.0], [66.7, 1198.0], [66.8, 1198.0], [66.9, 1198.0], [67.0, 1198.0], [67.1, 1199.0], [67.2, 1199.0], [67.3, 1199.0], [67.4, 1199.0], [67.5, 1199.0], [67.6, 1199.0], [67.7, 1199.0], [67.8, 1199.0], [67.9, 1199.0], [68.0, 1199.0], [68.1, 1199.0], [68.2, 1199.0], [68.3, 1199.0], [68.4, 1200.0], [68.5, 1200.0], [68.6, 1200.0], [68.7, 1200.0], [68.8, 1200.0], [68.9, 1200.0], [69.0, 1200.0], [69.1, 1200.0], [69.2, 1200.0], [69.3, 1200.0], [69.4, 1200.0], [69.5, 1200.0], [69.6, 1200.0], [69.7, 1200.0], [69.8, 1200.0], [69.9, 1201.0], [70.0, 1201.0], [70.1, 1201.0], [70.2, 1201.0], [70.3, 1201.0], [70.4, 1201.0], [70.5, 1201.0], [70.6, 1201.0], [70.7, 1201.0], [70.8, 1201.0], [70.9, 1201.0], [71.0, 1201.0], [71.1, 1201.0], [71.2, 1201.0], [71.3, 1201.0], [71.4, 1201.0], [71.5, 1201.0], [71.6, 1201.0], [71.7, 1202.0], [71.8, 1202.0], [71.9, 1202.0], [72.0, 1202.0], [72.1, 1202.0], [72.2, 1202.0], [72.3, 1202.0], [72.4, 1202.0], [72.5, 1202.0], [72.6, 1202.0], [72.7, 1202.0], [72.8, 1203.0], [72.9, 1203.0], [73.0, 1203.0], [73.1, 1203.0], [73.2, 1203.0], [73.3, 1203.0], [73.4, 1203.0], [73.5, 1203.0], [73.6, 1203.0], [73.7, 1203.0], [73.8, 1203.0], [73.9, 1203.0], [74.0, 1203.0], [74.1, 1204.0], [74.2, 1204.0], [74.3, 1204.0], [74.4, 1204.0], [74.5, 1204.0], [74.6, 1204.0], [74.7, 1204.0], [74.8, 1204.0], [74.9, 1204.0], [75.0, 1204.0], [75.1, 1204.0], [75.2, 1204.0], [75.3, 1205.0], [75.4, 1205.0], [75.5, 1205.0], [75.6, 1205.0], [75.7, 1205.0], [75.8, 1205.0], [75.9, 1205.0], [76.0, 1205.0], [76.1, 1205.0], [76.2, 1206.0], [76.3, 1206.0], [76.4, 1206.0], [76.5, 1206.0], [76.6, 1206.0], [76.7, 1206.0], [76.8, 1206.0], [76.9, 1206.0], [77.0, 1206.0], [77.1, 1206.0], [77.2, 1206.0], [77.3, 1207.0], [77.4, 1207.0], [77.5, 1207.0], [77.6, 1207.0], [77.7, 1207.0], [77.8, 1207.0], [77.9, 1207.0], [78.0, 1207.0], [78.1, 1207.0], [78.2, 1208.0], [78.3, 1208.0], [78.4, 1208.0], [78.5, 1208.0], [78.6, 1208.0], [78.7, 1208.0], [78.8, 1209.0], [78.9, 1209.0], [79.0, 1209.0], [79.1, 1209.0], [79.2, 1209.0], [79.3, 1209.0], [79.4, 1210.0], [79.5, 1210.0], [79.6, 1210.0], [79.7, 1210.0], [79.8, 1210.0], [79.9, 1210.0], [80.0, 1210.0], [80.1, 1210.0], [80.2, 1211.0], [80.3, 1211.0], [80.4, 1211.0], [80.5, 1211.0], [80.6, 1211.0], [80.7, 1211.0], [80.8, 1211.0], [80.9, 1211.0], [81.0, 1211.0], [81.1, 1212.0], [81.2, 1212.0], [81.3, 1212.0], [81.4, 1212.0], [81.5, 1212.0], [81.6, 1212.0], [81.7, 1213.0], [81.8, 1213.0], [81.9, 1213.0], [82.0, 1213.0], [82.1, 1213.0], [82.2, 1213.0], [82.3, 1213.0], [82.4, 1213.0], [82.5, 1214.0], [82.6, 1214.0], [82.7, 1214.0], [82.8, 1214.0], [82.9, 1215.0], [83.0, 1215.0], [83.1, 1215.0], [83.2, 1215.0], [83.3, 1215.0], [83.4, 1215.0], [83.5, 1215.0], [83.6, 1216.0], [83.7, 1216.0], [83.8, 1216.0], [83.9, 1216.0], [84.0, 1216.0], [84.1, 1216.0], [84.2, 1216.0], [84.3, 1216.0], [84.4, 1217.0], [84.5, 1217.0], [84.6, 1217.0], [84.7, 1217.0], [84.8, 1218.0], [84.9, 1218.0], [85.0, 1218.0], [85.1, 1218.0], [85.2, 1218.0], [85.3, 1218.0], [85.4, 1219.0], [85.5, 1219.0], [85.6, 1219.0], [85.7, 1220.0], [85.8, 1220.0], [85.9, 1220.0], [86.0, 1221.0], [86.1, 1221.0], [86.2, 1221.0], [86.3, 1221.0], [86.4, 1221.0], [86.5, 1222.0], [86.6, 1222.0], [86.7, 1223.0], [86.8, 1223.0], [86.9, 1223.0], [87.0, 1224.0], [87.1, 1224.0], [87.2, 1226.0], [87.3, 1226.0], [87.4, 1227.0], [87.5, 1227.0], [87.6, 1228.0], [87.7, 1228.0], [87.8, 1228.0], [87.9, 1228.0], [88.0, 1228.0], [88.1, 1229.0], [88.2, 1229.0], [88.3, 1230.0], [88.4, 1230.0], [88.5, 1231.0], [88.6, 1232.0], [88.7, 1233.0], [88.8, 1234.0], [88.9, 1234.0], [89.0, 1234.0], [89.1, 1235.0], [89.2, 1236.0], [89.3, 1237.0], [89.4, 1238.0], [89.5, 1241.0], [89.6, 1243.0], [89.7, 1246.0], [89.8, 1249.0], [89.9, 1251.0], [90.0, 1257.0], [90.1, 1293.0], [90.2, 1329.0], [90.3, 1491.0], [90.4, 1515.0], [90.5, 1559.0], [90.6, 1681.0], [90.7, 1727.0], [90.8, 1755.0], [90.9, 1797.0], [91.0, 1862.0], [91.1, 1888.0], [91.2, 1916.0], [91.3, 1932.0], [91.4, 1953.0], [91.5, 1977.0], [91.6, 2007.0], [91.7, 2024.0], [91.8, 2086.0], [91.9, 2108.0], [92.0, 2114.0], [92.1, 2118.0], [92.2, 2118.0], [92.3, 2119.0], [92.4, 2124.0], [92.5, 2124.0], [92.6, 2128.0], [92.7, 2130.0], [92.8, 2133.0], [92.9, 2134.0], [93.0, 2136.0], [93.1, 2138.0], [93.2, 2139.0], [93.3, 2140.0], [93.4, 2143.0], [93.5, 2144.0], [93.6, 2148.0], [93.7, 2155.0], [93.8, 2158.0], [93.9, 2169.0], [94.0, 2188.0], [94.1, 2196.0], [94.2, 2206.0], [94.3, 2538.0], [94.4, 2715.0], [94.5, 3107.0], [94.6, 3109.0], [94.7, 3113.0], [94.8, 3117.0], [94.9, 3119.0], [95.0, 3121.0], [95.1, 3122.0], [95.2, 3124.0], [95.3, 3126.0], [95.4, 3127.0], [95.5, 3129.0], [95.6, 3131.0], [95.7, 3133.0], [95.8, 3134.0], [95.9, 3137.0], [96.0, 3142.0], [96.1, 3146.0], [96.2, 3149.0], [96.3, 3153.0], [96.4, 3162.0], [96.5, 3173.0], [96.6, 3184.0], [96.7, 3313.0], [96.8, 3401.0], [96.9, 4105.0], [97.0, 4111.0], [97.1, 4113.0], [97.2, 4115.0], [97.3, 4116.0], [97.4, 4118.0], [97.5, 4118.0], [97.6, 4120.0], [97.7, 4121.0], [97.8, 4123.0], [97.9, 4126.0], [98.0, 4129.0], [98.1, 4130.0], [98.2, 4131.0], [98.3, 4134.0], [98.4, 4135.0], [98.5, 4135.0], [98.6, 4140.0], [98.7, 4142.0], [98.8, 4143.0], [98.9, 4150.0], [99.0, 4156.0], [99.1, 5152.0], [99.2, 7108.0], [99.3, 7115.0], [99.4, 7116.0], [99.5, 7123.0], [99.6, 7126.0], [99.7, 7131.0], [99.8, 7137.0], [99.9, 7150.0]], "isOverall": false, "label": "Login User", "isController": false}, {"data": [[0.0, 275.0], [0.1, 276.0], [0.2, 276.0], [0.3, 276.0], [0.4, 276.0], [0.5, 276.0], [0.6, 276.0], [0.7, 276.0], [0.8, 276.0], [0.9, 276.0], [1.0, 276.0], [1.1, 277.0], [1.2, 277.0], [1.3, 277.0], [1.4, 277.0], [1.5, 277.0], [1.6, 277.0], [1.7, 277.0], [1.8, 277.0], [1.9, 277.0], [2.0, 277.0], [2.1, 277.0], [2.2, 277.0], [2.3, 277.0], [2.4, 277.0], [2.5, 277.0], [2.6, 277.0], [2.7, 277.0], [2.8, 277.0], [2.9, 277.0], [3.0, 277.0], [3.1, 277.0], [3.2, 277.0], [3.3, 277.0], [3.4, 277.0], [3.5, 277.0], [3.6, 277.0], [3.7, 277.0], [3.8, 278.0], [3.9, 278.0], [4.0, 278.0], [4.1, 278.0], [4.2, 278.0], [4.3, 278.0], [4.4, 278.0], [4.5, 278.0], [4.6, 278.0], [4.7, 278.0], [4.8, 278.0], [4.9, 278.0], [5.0, 278.0], [5.1, 278.0], [5.2, 278.0], [5.3, 278.0], [5.4, 278.0], [5.5, 278.0], [5.6, 278.0], [5.7, 278.0], [5.8, 278.0], [5.9, 279.0], [6.0, 279.0], [6.1, 279.0], [6.2, 279.0], [6.3, 279.0], [6.4, 279.0], [6.5, 279.0], [6.6, 279.0], [6.7, 279.0], [6.8, 279.0], [6.9, 279.0], [7.0, 279.0], [7.1, 279.0], [7.2, 279.0], [7.3, 279.0], [7.4, 279.0], [7.5, 279.0], [7.6, 279.0], [7.7, 279.0], [7.8, 279.0], [7.9, 279.0], [8.0, 279.0], [8.1, 279.0], [8.2, 279.0], [8.3, 279.0], [8.4, 279.0], [8.5, 279.0], [8.6, 279.0], [8.7, 279.0], [8.8, 279.0], [8.9, 279.0], [9.0, 279.0], [9.1, 279.0], [9.2, 279.0], [9.3, 279.0], [9.4, 279.0], [9.5, 279.0], [9.6, 279.0], [9.7, 279.0], [9.8, 279.0], [9.9, 279.0], [10.0, 280.0], [10.1, 280.0], [10.2, 280.0], [10.3, 280.0], [10.4, 280.0], [10.5, 280.0], [10.6, 280.0], [10.7, 280.0], [10.8, 280.0], [10.9, 280.0], [11.0, 280.0], [11.1, 280.0], [11.2, 280.0], [11.3, 280.0], [11.4, 280.0], [11.5, 280.0], [11.6, 280.0], [11.7, 280.0], [11.8, 280.0], [11.9, 280.0], [12.0, 280.0], [12.1, 280.0], [12.2, 280.0], [12.3, 280.0], [12.4, 280.0], [12.5, 280.0], [12.6, 280.0], [12.7, 280.0], [12.8, 280.0], [12.9, 280.0], [13.0, 280.0], [13.1, 280.0], [13.2, 280.0], [13.3, 280.0], [13.4, 280.0], [13.5, 280.0], [13.6, 280.0], [13.7, 280.0], [13.8, 280.0], [13.9, 280.0], [14.0, 280.0], [14.1, 280.0], [14.2, 280.0], [14.3, 280.0], [14.4, 280.0], [14.5, 280.0], [14.6, 280.0], [14.7, 280.0], [14.8, 280.0], [14.9, 280.0], [15.0, 280.0], [15.1, 280.0], [15.2, 281.0], [15.3, 281.0], [15.4, 281.0], [15.5, 281.0], [15.6, 281.0], [15.7, 281.0], [15.8, 281.0], [15.9, 281.0], [16.0, 281.0], [16.1, 281.0], [16.2, 281.0], [16.3, 281.0], [16.4, 281.0], [16.5, 281.0], [16.6, 281.0], [16.7, 281.0], [16.8, 281.0], [16.9, 281.0], [17.0, 281.0], [17.1, 281.0], [17.2, 281.0], [17.3, 281.0], [17.4, 281.0], [17.5, 281.0], [17.6, 281.0], [17.7, 281.0], [17.8, 281.0], [17.9, 281.0], [18.0, 281.0], [18.1, 281.0], [18.2, 281.0], [18.3, 281.0], [18.4, 281.0], [18.5, 281.0], [18.6, 281.0], [18.7, 281.0], [18.8, 281.0], [18.9, 281.0], [19.0, 281.0], [19.1, 281.0], [19.2, 281.0], [19.3, 281.0], [19.4, 281.0], [19.5, 281.0], [19.6, 281.0], [19.7, 281.0], [19.8, 281.0], [19.9, 281.0], [20.0, 281.0], [20.1, 282.0], [20.2, 282.0], [20.3, 282.0], [20.4, 282.0], [20.5, 282.0], [20.6, 282.0], [20.7, 282.0], [20.8, 282.0], [20.9, 282.0], [21.0, 282.0], [21.1, 282.0], [21.2, 282.0], [21.3, 282.0], [21.4, 282.0], [21.5, 282.0], [21.6, 282.0], [21.7, 282.0], [21.8, 282.0], [21.9, 282.0], [22.0, 282.0], [22.1, 282.0], [22.2, 282.0], [22.3, 282.0], [22.4, 282.0], [22.5, 282.0], [22.6, 282.0], [22.7, 282.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 282.0], [23.5, 282.0], [23.6, 282.0], [23.7, 282.0], [23.8, 282.0], [23.9, 282.0], [24.0, 282.0], [24.1, 282.0], [24.2, 282.0], [24.3, 282.0], [24.4, 282.0], [24.5, 282.0], [24.6, 282.0], [24.7, 282.0], [24.8, 282.0], [24.9, 282.0], [25.0, 282.0], [25.1, 282.0], [25.2, 282.0], [25.3, 282.0], [25.4, 282.0], [25.5, 282.0], [25.6, 282.0], [25.7, 282.0], [25.8, 282.0], [25.9, 282.0], [26.0, 282.0], [26.1, 282.0], [26.2, 282.0], [26.3, 282.0], [26.4, 283.0], [26.5, 283.0], [26.6, 283.0], [26.7, 283.0], [26.8, 283.0], [26.9, 283.0], [27.0, 283.0], [27.1, 283.0], [27.2, 283.0], [27.3, 283.0], [27.4, 283.0], [27.5, 283.0], [27.6, 283.0], [27.7, 283.0], [27.8, 283.0], [27.9, 283.0], [28.0, 283.0], [28.1, 283.0], [28.2, 283.0], [28.3, 283.0], [28.4, 283.0], [28.5, 283.0], [28.6, 283.0], [28.7, 283.0], [28.8, 283.0], [28.9, 283.0], [29.0, 283.0], [29.1, 283.0], [29.2, 283.0], [29.3, 283.0], [29.4, 283.0], [29.5, 283.0], [29.6, 283.0], [29.7, 283.0], [29.8, 283.0], [29.9, 283.0], [30.0, 283.0], [30.1, 283.0], [30.2, 283.0], [30.3, 283.0], [30.4, 283.0], [30.5, 283.0], [30.6, 283.0], [30.7, 283.0], [30.8, 283.0], [30.9, 283.0], [31.0, 283.0], [31.1, 283.0], [31.2, 283.0], [31.3, 283.0], [31.4, 283.0], [31.5, 283.0], [31.6, 283.0], [31.7, 284.0], [31.8, 284.0], [31.9, 284.0], [32.0, 284.0], [32.1, 284.0], [32.2, 284.0], [32.3, 284.0], [32.4, 284.0], [32.5, 284.0], [32.6, 284.0], [32.7, 284.0], [32.8, 284.0], [32.9, 284.0], [33.0, 284.0], [33.1, 284.0], [33.2, 284.0], [33.3, 284.0], [33.4, 284.0], [33.5, 284.0], [33.6, 284.0], [33.7, 284.0], [33.8, 284.0], [33.9, 284.0], [34.0, 284.0], [34.1, 284.0], [34.2, 284.0], [34.3, 284.0], [34.4, 284.0], [34.5, 284.0], [34.6, 284.0], [34.7, 284.0], [34.8, 284.0], [34.9, 284.0], [35.0, 284.0], [35.1, 284.0], [35.2, 285.0], [35.3, 285.0], [35.4, 285.0], [35.5, 285.0], [35.6, 285.0], [35.7, 285.0], [35.8, 285.0], [35.9, 285.0], [36.0, 285.0], [36.1, 285.0], [36.2, 285.0], [36.3, 285.0], [36.4, 285.0], [36.5, 285.0], [36.6, 285.0], [36.7, 285.0], [36.8, 285.0], [36.9, 285.0], [37.0, 285.0], [37.1, 285.0], [37.2, 285.0], [37.3, 285.0], [37.4, 285.0], [37.5, 285.0], [37.6, 285.0], [37.7, 285.0], [37.8, 285.0], [37.9, 285.0], [38.0, 285.0], [38.1, 285.0], [38.2, 286.0], [38.3, 286.0], [38.4, 286.0], [38.5, 286.0], [38.6, 286.0], [38.7, 286.0], [38.8, 286.0], [38.9, 286.0], [39.0, 286.0], [39.1, 286.0], [39.2, 286.0], [39.3, 286.0], [39.4, 286.0], [39.5, 286.0], [39.6, 286.0], [39.7, 286.0], [39.8, 286.0], [39.9, 286.0], [40.0, 286.0], [40.1, 286.0], [40.2, 286.0], [40.3, 286.0], [40.4, 286.0], [40.5, 286.0], [40.6, 286.0], [40.7, 286.0], [40.8, 286.0], [40.9, 286.0], [41.0, 286.0], [41.1, 286.0], [41.2, 286.0], [41.3, 286.0], [41.4, 286.0], [41.5, 287.0], [41.6, 287.0], [41.7, 287.0], [41.8, 287.0], [41.9, 287.0], [42.0, 287.0], [42.1, 287.0], [42.2, 287.0], [42.3, 287.0], [42.4, 287.0], [42.5, 287.0], [42.6, 287.0], [42.7, 287.0], [42.8, 287.0], [42.9, 287.0], [43.0, 287.0], [43.1, 288.0], [43.2, 288.0], [43.3, 288.0], [43.4, 288.0], [43.5, 288.0], [43.6, 288.0], [43.7, 288.0], [43.8, 288.0], [43.9, 288.0], [44.0, 288.0], [44.1, 288.0], [44.2, 288.0], [44.3, 289.0], [44.4, 289.0], [44.5, 289.0], [44.6, 289.0], [44.7, 289.0], [44.8, 289.0], [44.9, 289.0], [45.0, 289.0], [45.1, 290.0], [45.2, 290.0], [45.3, 290.0], [45.4, 290.0], [45.5, 290.0], [45.6, 290.0], [45.7, 291.0], [45.8, 291.0], [45.9, 291.0], [46.0, 291.0], [46.1, 291.0], [46.2, 292.0], [46.3, 292.0], [46.4, 292.0], [46.5, 292.0], [46.6, 293.0], [46.7, 293.0], [46.8, 293.0], [46.9, 293.0], [47.0, 293.0], [47.1, 294.0], [47.2, 294.0], [47.3, 294.0], [47.4, 294.0], [47.5, 294.0], [47.6, 294.0], [47.7, 294.0], [47.8, 294.0], [47.9, 294.0], [48.0, 294.0], [48.1, 294.0], [48.2, 294.0], [48.3, 294.0], [48.4, 294.0], [48.5, 294.0], [48.6, 294.0], [48.7, 295.0], [48.8, 295.0], [48.9, 295.0], [49.0, 295.0], [49.1, 295.0], [49.2, 295.0], [49.3, 295.0], [49.4, 295.0], [49.5, 295.0], [49.6, 295.0], [49.7, 295.0], [49.8, 295.0], [49.9, 295.0], [50.0, 295.0], [50.1, 295.0], [50.2, 295.0], [50.3, 295.0], [50.4, 295.0], [50.5, 295.0], [50.6, 296.0], [50.7, 296.0], [50.8, 296.0], [50.9, 296.0], [51.0, 296.0], [51.1, 296.0], [51.2, 296.0], [51.3, 296.0], [51.4, 296.0], [51.5, 296.0], [51.6, 296.0], [51.7, 296.0], [51.8, 296.0], [51.9, 296.0], [52.0, 296.0], [52.1, 296.0], [52.2, 296.0], [52.3, 296.0], [52.4, 296.0], [52.5, 296.0], [52.6, 296.0], [52.7, 297.0], [52.8, 297.0], [52.9, 297.0], [53.0, 297.0], [53.1, 297.0], [53.2, 297.0], [53.3, 297.0], [53.4, 297.0], [53.5, 297.0], [53.6, 297.0], [53.7, 297.0], [53.8, 297.0], [53.9, 297.0], [54.0, 297.0], [54.1, 297.0], [54.2, 297.0], [54.3, 297.0], [54.4, 297.0], [54.5, 297.0], [54.6, 297.0], [54.7, 297.0], [54.8, 297.0], [54.9, 297.0], [55.0, 297.0], [55.1, 297.0], [55.2, 297.0], [55.3, 297.0], [55.4, 297.0], [55.5, 297.0], [55.6, 297.0], [55.7, 297.0], [55.8, 297.0], [55.9, 297.0], [56.0, 297.0], [56.1, 297.0], [56.2, 297.0], [56.3, 297.0], [56.4, 297.0], [56.5, 297.0], [56.6, 297.0], [56.7, 298.0], [56.8, 298.0], [56.9, 298.0], [57.0, 298.0], [57.1, 298.0], [57.2, 298.0], [57.3, 298.0], [57.4, 298.0], [57.5, 298.0], [57.6, 298.0], [57.7, 298.0], [57.8, 298.0], [57.9, 298.0], [58.0, 298.0], [58.1, 298.0], [58.2, 298.0], [58.3, 298.0], [58.4, 298.0], [58.5, 298.0], [58.6, 298.0], [58.7, 298.0], [58.8, 298.0], [58.9, 298.0], [59.0, 298.0], [59.1, 298.0], [59.2, 298.0], [59.3, 298.0], [59.4, 298.0], [59.5, 298.0], [59.6, 298.0], [59.7, 298.0], [59.8, 298.0], [59.9, 298.0], [60.0, 298.0], [60.1, 298.0], [60.2, 298.0], [60.3, 298.0], [60.4, 298.0], [60.5, 298.0], [60.6, 298.0], [60.7, 298.0], [60.8, 298.0], [60.9, 298.0], [61.0, 298.0], [61.1, 298.0], [61.2, 299.0], [61.3, 299.0], [61.4, 299.0], [61.5, 299.0], [61.6, 299.0], [61.7, 299.0], [61.8, 299.0], [61.9, 299.0], [62.0, 299.0], [62.1, 299.0], [62.2, 299.0], [62.3, 299.0], [62.4, 299.0], [62.5, 299.0], [62.6, 299.0], [62.7, 299.0], [62.8, 299.0], [62.9, 299.0], [63.0, 299.0], [63.1, 299.0], [63.2, 299.0], [63.3, 299.0], [63.4, 299.0], [63.5, 299.0], [63.6, 299.0], [63.7, 299.0], [63.8, 299.0], [63.9, 299.0], [64.0, 299.0], [64.1, 299.0], [64.2, 299.0], [64.3, 299.0], [64.4, 299.0], [64.5, 299.0], [64.6, 299.0], [64.7, 299.0], [64.8, 299.0], [64.9, 299.0], [65.0, 299.0], [65.1, 299.0], [65.2, 299.0], [65.3, 299.0], [65.4, 300.0], [65.5, 300.0], [65.6, 300.0], [65.7, 300.0], [65.8, 300.0], [65.9, 300.0], [66.0, 300.0], [66.1, 300.0], [66.2, 300.0], [66.3, 300.0], [66.4, 300.0], [66.5, 300.0], [66.6, 300.0], [66.7, 300.0], [66.8, 300.0], [66.9, 300.0], [67.0, 300.0], [67.1, 300.0], [67.2, 300.0], [67.3, 300.0], [67.4, 300.0], [67.5, 300.0], [67.6, 300.0], [67.7, 300.0], [67.8, 300.0], [67.9, 300.0], [68.0, 300.0], [68.1, 300.0], [68.2, 300.0], [68.3, 300.0], [68.4, 300.0], [68.5, 300.0], [68.6, 300.0], [68.7, 300.0], [68.8, 300.0], [68.9, 300.0], [69.0, 300.0], [69.1, 300.0], [69.2, 300.0], [69.3, 300.0], [69.4, 300.0], [69.5, 300.0], [69.6, 300.0], [69.7, 300.0], [69.8, 300.0], [69.9, 300.0], [70.0, 301.0], [70.1, 301.0], [70.2, 301.0], [70.3, 301.0], [70.4, 301.0], [70.5, 301.0], [70.6, 301.0], [70.7, 301.0], [70.8, 301.0], [70.9, 301.0], [71.0, 301.0], [71.1, 301.0], [71.2, 301.0], [71.3, 301.0], [71.4, 301.0], [71.5, 301.0], [71.6, 301.0], [71.7, 301.0], [71.8, 301.0], [71.9, 301.0], [72.0, 301.0], [72.1, 301.0], [72.2, 301.0], [72.3, 301.0], [72.4, 301.0], [72.5, 301.0], [72.6, 301.0], [72.7, 301.0], [72.8, 301.0], [72.9, 301.0], [73.0, 301.0], [73.1, 301.0], [73.2, 301.0], [73.3, 301.0], [73.4, 301.0], [73.5, 301.0], [73.6, 301.0], [73.7, 301.0], [73.8, 302.0], [73.9, 302.0], [74.0, 302.0], [74.1, 302.0], [74.2, 302.0], [74.3, 302.0], [74.4, 302.0], [74.5, 302.0], [74.6, 302.0], [74.7, 302.0], [74.8, 302.0], [74.9, 302.0], [75.0, 302.0], [75.1, 302.0], [75.2, 302.0], [75.3, 302.0], [75.4, 302.0], [75.5, 302.0], [75.6, 302.0], [75.7, 302.0], [75.8, 302.0], [75.9, 302.0], [76.0, 302.0], [76.1, 302.0], [76.2, 302.0], [76.3, 302.0], [76.4, 302.0], [76.5, 302.0], [76.6, 302.0], [76.7, 302.0], [76.8, 302.0], [76.9, 302.0], [77.0, 302.0], [77.1, 302.0], [77.2, 302.0], [77.3, 302.0], [77.4, 303.0], [77.5, 303.0], [77.6, 303.0], [77.7, 303.0], [77.8, 303.0], [77.9, 303.0], [78.0, 303.0], [78.1, 303.0], [78.2, 303.0], [78.3, 303.0], [78.4, 303.0], [78.5, 303.0], [78.6, 303.0], [78.7, 303.0], [78.8, 303.0], [78.9, 303.0], [79.0, 303.0], [79.1, 303.0], [79.2, 303.0], [79.3, 303.0], [79.4, 303.0], [79.5, 303.0], [79.6, 303.0], [79.7, 303.0], [79.8, 303.0], [79.9, 303.0], [80.0, 303.0], [80.1, 303.0], [80.2, 303.0], [80.3, 303.0], [80.4, 303.0], [80.5, 303.0], [80.6, 303.0], [80.7, 304.0], [80.8, 304.0], [80.9, 304.0], [81.0, 304.0], [81.1, 304.0], [81.2, 304.0], [81.3, 304.0], [81.4, 304.0], [81.5, 304.0], [81.6, 304.0], [81.7, 304.0], [81.8, 304.0], [81.9, 304.0], [82.0, 304.0], [82.1, 304.0], [82.2, 304.0], [82.3, 304.0], [82.4, 304.0], [82.5, 304.0], [82.6, 304.0], [82.7, 304.0], [82.8, 304.0], [82.9, 304.0], [83.0, 304.0], [83.1, 304.0], [83.2, 304.0], [83.3, 304.0], [83.4, 304.0], [83.5, 305.0], [83.6, 305.0], [83.7, 305.0], [83.8, 305.0], [83.9, 305.0], [84.0, 305.0], [84.1, 305.0], [84.2, 305.0], [84.3, 305.0], [84.4, 305.0], [84.5, 305.0], [84.6, 305.0], [84.7, 305.0], [84.8, 305.0], [84.9, 305.0], [85.0, 305.0], [85.1, 305.0], [85.2, 305.0], [85.3, 305.0], [85.4, 305.0], [85.5, 305.0], [85.6, 305.0], [85.7, 305.0], [85.8, 305.0], [85.9, 305.0], [86.0, 305.0], [86.1, 305.0], [86.2, 306.0], [86.3, 306.0], [86.4, 306.0], [86.5, 306.0], [86.6, 306.0], [86.7, 306.0], [86.8, 306.0], [86.9, 306.0], [87.0, 306.0], [87.1, 306.0], [87.2, 306.0], [87.3, 306.0], [87.4, 306.0], [87.5, 306.0], [87.6, 306.0], [87.7, 306.0], [87.8, 307.0], [87.9, 307.0], [88.0, 307.0], [88.1, 307.0], [88.2, 307.0], [88.3, 307.0], [88.4, 307.0], [88.5, 307.0], [88.6, 307.0], [88.7, 307.0], [88.8, 307.0], [88.9, 307.0], [89.0, 307.0], [89.1, 308.0], [89.2, 308.0], [89.3, 308.0], [89.4, 308.0], [89.5, 308.0], [89.6, 308.0], [89.7, 308.0], [89.8, 308.0], [89.9, 308.0], [90.0, 308.0], [90.1, 308.0], [90.2, 308.0], [90.3, 308.0], [90.4, 308.0], [90.5, 308.0], [90.6, 309.0], [90.7, 309.0], [90.8, 309.0], [90.9, 309.0], [91.0, 309.0], [91.1, 309.0], [91.2, 309.0], [91.3, 309.0], [91.4, 309.0], [91.5, 309.0], [91.6, 310.0], [91.7, 310.0], [91.8, 310.0], [91.9, 310.0], [92.0, 310.0], [92.1, 310.0], [92.2, 310.0], [92.3, 311.0], [92.4, 311.0], [92.5, 311.0], [92.6, 311.0], [92.7, 311.0], [92.8, 311.0], [92.9, 312.0], [93.0, 312.0], [93.1, 312.0], [93.2, 312.0], [93.3, 312.0], [93.4, 313.0], [93.5, 313.0], [93.6, 313.0], [93.7, 313.0], [93.8, 313.0], [93.9, 313.0], [94.0, 313.0], [94.1, 314.0], [94.2, 314.0], [94.3, 315.0], [94.4, 315.0], [94.5, 315.0], [94.6, 315.0], [94.7, 316.0], [94.8, 316.0], [94.9, 316.0], [95.0, 316.0], [95.1, 316.0], [95.2, 317.0], [95.3, 317.0], [95.4, 318.0], [95.5, 319.0], [95.6, 319.0], [95.7, 320.0], [95.8, 322.0], [95.9, 322.0], [96.0, 322.0], [96.1, 325.0], [96.2, 330.0], [96.3, 331.0], [96.4, 336.0], [96.5, 345.0], [96.6, 726.0], [96.7, 998.0], [96.8, 1011.0], [96.9, 1027.0], [97.0, 1076.0], [97.1, 1080.0], [97.2, 1282.0], [97.3, 1283.0], [97.4, 1294.0], [97.5, 2280.0], [97.6, 2281.0], [97.7, 2282.0], [97.8, 2286.0], [97.9, 2286.0], [98.0, 2290.0], [98.1, 3278.0], [98.2, 3280.0], [98.3, 3280.0], [98.4, 3281.0], [98.5, 3281.0], [98.6, 3282.0], [98.7, 3283.0], [98.8, 3283.0], [98.9, 3284.0], [99.0, 3285.0], [99.1, 3285.0], [99.2, 3287.0], [99.3, 3288.0], [99.4, 3288.0], [99.5, 3290.0], [99.6, 3307.0], [99.7, 6278.0], [99.8, 6281.0], [99.9, 6281.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[0.0, 274.0], [0.1, 276.0], [0.2, 276.0], [0.3, 276.0], [0.4, 276.0], [0.5, 276.0], [0.6, 276.0], [0.7, 276.0], [0.8, 276.0], [0.9, 276.0], [1.0, 276.0], [1.1, 276.0], [1.2, 276.0], [1.3, 276.0], [1.4, 277.0], [1.5, 277.0], [1.6, 277.0], [1.7, 277.0], [1.8, 277.0], [1.9, 277.0], [2.0, 277.0], [2.1, 277.0], [2.2, 277.0], [2.3, 277.0], [2.4, 277.0], [2.5, 277.0], [2.6, 277.0], [2.7, 277.0], [2.8, 277.0], [2.9, 277.0], [3.0, 277.0], [3.1, 277.0], [3.2, 278.0], [3.3, 278.0], [3.4, 278.0], [3.5, 278.0], [3.6, 278.0], [3.7, 278.0], [3.8, 278.0], [3.9, 278.0], [4.0, 278.0], [4.1, 278.0], [4.2, 278.0], [4.3, 278.0], [4.4, 278.0], [4.5, 278.0], [4.6, 278.0], [4.7, 278.0], [4.8, 278.0], [4.9, 278.0], [5.0, 278.0], [5.1, 278.0], [5.2, 278.0], [5.3, 278.0], [5.4, 278.0], [5.5, 278.0], [5.6, 278.0], [5.7, 278.0], [5.8, 278.0], [5.9, 278.0], [6.0, 279.0], [6.1, 279.0], [6.2, 279.0], [6.3, 279.0], [6.4, 279.0], [6.5, 279.0], [6.6, 279.0], [6.7, 279.0], [6.8, 279.0], [6.9, 279.0], [7.0, 279.0], [7.1, 279.0], [7.2, 279.0], [7.3, 279.0], [7.4, 279.0], [7.5, 279.0], [7.6, 279.0], [7.7, 279.0], [7.8, 279.0], [7.9, 279.0], [8.0, 279.0], [8.1, 279.0], [8.2, 279.0], [8.3, 279.0], [8.4, 279.0], [8.5, 279.0], [8.6, 279.0], [8.7, 279.0], [8.8, 279.0], [8.9, 279.0], [9.0, 279.0], [9.1, 279.0], [9.2, 279.0], [9.3, 279.0], [9.4, 279.0], [9.5, 279.0], [9.6, 279.0], [9.7, 279.0], [9.8, 279.0], [9.9, 280.0], [10.0, 280.0], [10.1, 280.0], [10.2, 280.0], [10.3, 280.0], [10.4, 280.0], [10.5, 280.0], [10.6, 280.0], [10.7, 280.0], [10.8, 280.0], [10.9, 280.0], [11.0, 280.0], [11.1, 280.0], [11.2, 280.0], [11.3, 280.0], [11.4, 280.0], [11.5, 280.0], [11.6, 280.0], [11.7, 280.0], [11.8, 280.0], [11.9, 280.0], [12.0, 280.0], [12.1, 280.0], [12.2, 280.0], [12.3, 280.0], [12.4, 280.0], [12.5, 280.0], [12.6, 280.0], [12.7, 280.0], [12.8, 280.0], [12.9, 280.0], [13.0, 280.0], [13.1, 280.0], [13.2, 280.0], [13.3, 280.0], [13.4, 280.0], [13.5, 280.0], [13.6, 280.0], [13.7, 280.0], [13.8, 280.0], [13.9, 281.0], [14.0, 281.0], [14.1, 281.0], [14.2, 281.0], [14.3, 281.0], [14.4, 281.0], [14.5, 281.0], [14.6, 281.0], [14.7, 281.0], [14.8, 281.0], [14.9, 281.0], [15.0, 281.0], [15.1, 281.0], [15.2, 281.0], [15.3, 281.0], [15.4, 281.0], [15.5, 281.0], [15.6, 281.0], [15.7, 281.0], [15.8, 281.0], [15.9, 281.0], [16.0, 281.0], [16.1, 281.0], [16.2, 281.0], [16.3, 281.0], [16.4, 281.0], [16.5, 281.0], [16.6, 281.0], [16.7, 281.0], [16.8, 281.0], [16.9, 281.0], [17.0, 281.0], [17.1, 281.0], [17.2, 281.0], [17.3, 281.0], [17.4, 281.0], [17.5, 281.0], [17.6, 281.0], [17.7, 281.0], [17.8, 281.0], [17.9, 281.0], [18.0, 281.0], [18.1, 281.0], [18.2, 281.0], [18.3, 281.0], [18.4, 281.0], [18.5, 281.0], [18.6, 281.0], [18.7, 282.0], [18.8, 282.0], [18.9, 282.0], [19.0, 282.0], [19.1, 282.0], [19.2, 282.0], [19.3, 282.0], [19.4, 282.0], [19.5, 282.0], [19.6, 282.0], [19.7, 282.0], [19.8, 282.0], [19.9, 282.0], [20.0, 282.0], [20.1, 282.0], [20.2, 282.0], [20.3, 282.0], [20.4, 282.0], [20.5, 282.0], [20.6, 282.0], [20.7, 282.0], [20.8, 282.0], [20.9, 282.0], [21.0, 282.0], [21.1, 282.0], [21.2, 282.0], [21.3, 282.0], [21.4, 282.0], [21.5, 282.0], [21.6, 282.0], [21.7, 282.0], [21.8, 282.0], [21.9, 282.0], [22.0, 282.0], [22.1, 282.0], [22.2, 282.0], [22.3, 282.0], [22.4, 282.0], [22.5, 282.0], [22.6, 282.0], [22.7, 282.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 283.0], [23.5, 283.0], [23.6, 283.0], [23.7, 283.0], [23.8, 283.0], [23.9, 283.0], [24.0, 283.0], [24.1, 283.0], [24.2, 283.0], [24.3, 283.0], [24.4, 283.0], [24.5, 283.0], [24.6, 283.0], [24.7, 283.0], [24.8, 283.0], [24.9, 283.0], [25.0, 283.0], [25.1, 283.0], [25.2, 283.0], [25.3, 283.0], [25.4, 283.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 283.0], [25.9, 283.0], [26.0, 283.0], [26.1, 283.0], [26.2, 283.0], [26.3, 283.0], [26.4, 283.0], [26.5, 283.0], [26.6, 283.0], [26.7, 283.0], [26.8, 283.0], [26.9, 283.0], [27.0, 283.0], [27.1, 284.0], [27.2, 284.0], [27.3, 284.0], [27.4, 284.0], [27.5, 284.0], [27.6, 284.0], [27.7, 284.0], [27.8, 284.0], [27.9, 284.0], [28.0, 284.0], [28.1, 284.0], [28.2, 284.0], [28.3, 284.0], [28.4, 284.0], [28.5, 284.0], [28.6, 284.0], [28.7, 284.0], [28.8, 284.0], [28.9, 284.0], [29.0, 284.0], [29.1, 284.0], [29.2, 284.0], [29.3, 284.0], [29.4, 284.0], [29.5, 284.0], [29.6, 284.0], [29.7, 284.0], [29.8, 284.0], [29.9, 284.0], [30.0, 284.0], [30.1, 284.0], [30.2, 284.0], [30.3, 284.0], [30.4, 284.0], [30.5, 284.0], [30.6, 284.0], [30.7, 284.0], [30.8, 284.0], [30.9, 284.0], [31.0, 285.0], [31.1, 285.0], [31.2, 285.0], [31.3, 285.0], [31.4, 285.0], [31.5, 285.0], [31.6, 285.0], [31.7, 285.0], [31.8, 285.0], [31.9, 285.0], [32.0, 285.0], [32.1, 285.0], [32.2, 285.0], [32.3, 285.0], [32.4, 285.0], [32.5, 285.0], [32.6, 285.0], [32.7, 285.0], [32.8, 285.0], [32.9, 285.0], [33.0, 285.0], [33.1, 285.0], [33.2, 285.0], [33.3, 285.0], [33.4, 285.0], [33.5, 285.0], [33.6, 285.0], [33.7, 285.0], [33.8, 285.0], [33.9, 285.0], [34.0, 285.0], [34.1, 285.0], [34.2, 285.0], [34.3, 285.0], [34.4, 286.0], [34.5, 286.0], [34.6, 286.0], [34.7, 286.0], [34.8, 286.0], [34.9, 286.0], [35.0, 286.0], [35.1, 286.0], [35.2, 286.0], [35.3, 286.0], [35.4, 286.0], [35.5, 286.0], [35.6, 286.0], [35.7, 286.0], [35.8, 286.0], [35.9, 286.0], [36.0, 286.0], [36.1, 286.0], [36.2, 286.0], [36.3, 286.0], [36.4, 286.0], [36.5, 286.0], [36.6, 286.0], [36.7, 286.0], [36.8, 286.0], [36.9, 286.0], [37.0, 286.0], [37.1, 286.0], [37.2, 286.0], [37.3, 286.0], [37.4, 286.0], [37.5, 286.0], [37.6, 286.0], [37.7, 286.0], [37.8, 286.0], [37.9, 286.0], [38.0, 286.0], [38.1, 287.0], [38.2, 287.0], [38.3, 287.0], [38.4, 287.0], [38.5, 287.0], [38.6, 287.0], [38.7, 287.0], [38.8, 287.0], [38.9, 287.0], [39.0, 287.0], [39.1, 287.0], [39.2, 287.0], [39.3, 287.0], [39.4, 287.0], [39.5, 287.0], [39.6, 287.0], [39.7, 287.0], [39.8, 287.0], [39.9, 287.0], [40.0, 287.0], [40.1, 287.0], [40.2, 288.0], [40.3, 288.0], [40.4, 288.0], [40.5, 288.0], [40.6, 288.0], [40.7, 288.0], [40.8, 288.0], [40.9, 288.0], [41.0, 288.0], [41.1, 288.0], [41.2, 288.0], [41.3, 288.0], [41.4, 288.0], [41.5, 288.0], [41.6, 289.0], [41.7, 289.0], [41.8, 289.0], [41.9, 289.0], [42.0, 289.0], [42.1, 289.0], [42.2, 290.0], [42.3, 290.0], [42.4, 290.0], [42.5, 290.0], [42.6, 290.0], [42.7, 290.0], [42.8, 290.0], [42.9, 290.0], [43.0, 290.0], [43.1, 290.0], [43.2, 291.0], [43.3, 291.0], [43.4, 291.0], [43.5, 291.0], [43.6, 291.0], [43.7, 291.0], [43.8, 291.0], [43.9, 292.0], [44.0, 292.0], [44.1, 292.0], [44.2, 292.0], [44.3, 293.0], [44.4, 293.0], [44.5, 293.0], [44.6, 293.0], [44.7, 293.0], [44.8, 294.0], [44.9, 294.0], [45.0, 294.0], [45.1, 294.0], [45.2, 294.0], [45.3, 295.0], [45.4, 295.0], [45.5, 295.0], [45.6, 295.0], [45.7, 296.0], [45.8, 296.0], [45.9, 296.0], [46.0, 296.0], [46.1, 296.0], [46.2, 296.0], [46.3, 296.0], [46.4, 297.0], [46.5, 297.0], [46.6, 297.0], [46.7, 297.0], [46.8, 297.0], [46.9, 297.0], [47.0, 297.0], [47.1, 297.0], [47.2, 297.0], [47.3, 298.0], [47.4, 298.0], [47.5, 298.0], [47.6, 298.0], [47.7, 298.0], [47.8, 298.0], [47.9, 298.0], [48.0, 298.0], [48.1, 298.0], [48.2, 298.0], [48.3, 298.0], [48.4, 298.0], [48.5, 298.0], [48.6, 299.0], [48.7, 299.0], [48.8, 299.0], [48.9, 299.0], [49.0, 299.0], [49.1, 299.0], [49.2, 299.0], [49.3, 299.0], [49.4, 299.0], [49.5, 299.0], [49.6, 299.0], [49.7, 299.0], [49.8, 299.0], [49.9, 299.0], [50.0, 299.0], [50.1, 299.0], [50.2, 299.0], [50.3, 299.0], [50.4, 299.0], [50.5, 300.0], [50.6, 300.0], [50.7, 300.0], [50.8, 300.0], [50.9, 300.0], [51.0, 300.0], [51.1, 300.0], [51.2, 300.0], [51.3, 300.0], [51.4, 300.0], [51.5, 300.0], [51.6, 300.0], [51.7, 300.0], [51.8, 300.0], [51.9, 300.0], [52.0, 300.0], [52.1, 300.0], [52.2, 301.0], [52.3, 301.0], [52.4, 301.0], [52.5, 301.0], [52.6, 301.0], [52.7, 301.0], [52.8, 301.0], [52.9, 301.0], [53.0, 301.0], [53.1, 301.0], [53.2, 301.0], [53.3, 301.0], [53.4, 301.0], [53.5, 301.0], [53.6, 301.0], [53.7, 301.0], [53.8, 301.0], [53.9, 301.0], [54.0, 301.0], [54.1, 301.0], [54.2, 301.0], [54.3, 302.0], [54.4, 302.0], [54.5, 302.0], [54.6, 302.0], [54.7, 302.0], [54.8, 302.0], [54.9, 302.0], [55.0, 302.0], [55.1, 302.0], [55.2, 302.0], [55.3, 302.0], [55.4, 302.0], [55.5, 302.0], [55.6, 302.0], [55.7, 302.0], [55.8, 302.0], [55.9, 302.0], [56.0, 302.0], [56.1, 302.0], [56.2, 302.0], [56.3, 302.0], [56.4, 302.0], [56.5, 302.0], [56.6, 302.0], [56.7, 302.0], [56.8, 302.0], [56.9, 302.0], [57.0, 302.0], [57.1, 302.0], [57.2, 302.0], [57.3, 302.0], [57.4, 302.0], [57.5, 302.0], [57.6, 302.0], [57.7, 302.0], [57.8, 302.0], [57.9, 302.0], [58.0, 302.0], [58.1, 302.0], [58.2, 303.0], [58.3, 303.0], [58.4, 303.0], [58.5, 303.0], [58.6, 303.0], [58.7, 303.0], [58.8, 303.0], [58.9, 303.0], [59.0, 303.0], [59.1, 303.0], [59.2, 303.0], [59.3, 303.0], [59.4, 303.0], [59.5, 303.0], [59.6, 303.0], [59.7, 303.0], [59.8, 303.0], [59.9, 303.0], [60.0, 303.0], [60.1, 303.0], [60.2, 303.0], [60.3, 303.0], [60.4, 303.0], [60.5, 303.0], [60.6, 303.0], [60.7, 303.0], [60.8, 303.0], [60.9, 303.0], [61.0, 303.0], [61.1, 303.0], [61.2, 303.0], [61.3, 303.0], [61.4, 303.0], [61.5, 304.0], [61.6, 304.0], [61.7, 304.0], [61.8, 304.0], [61.9, 304.0], [62.0, 304.0], [62.1, 304.0], [62.2, 304.0], [62.3, 304.0], [62.4, 304.0], [62.5, 304.0], [62.6, 304.0], [62.7, 304.0], [62.8, 304.0], [62.9, 304.0], [63.0, 304.0], [63.1, 304.0], [63.2, 304.0], [63.3, 304.0], [63.4, 304.0], [63.5, 304.0], [63.6, 304.0], [63.7, 304.0], [63.8, 304.0], [63.9, 304.0], [64.0, 304.0], [64.1, 304.0], [64.2, 304.0], [64.3, 304.0], [64.4, 304.0], [64.5, 304.0], [64.6, 304.0], [64.7, 304.0], [64.8, 304.0], [64.9, 304.0], [65.0, 304.0], [65.1, 304.0], [65.2, 304.0], [65.3, 304.0], [65.4, 305.0], [65.5, 305.0], [65.6, 305.0], [65.7, 305.0], [65.8, 305.0], [65.9, 305.0], [66.0, 305.0], [66.1, 305.0], [66.2, 305.0], [66.3, 305.0], [66.4, 305.0], [66.5, 305.0], [66.6, 305.0], [66.7, 305.0], [66.8, 305.0], [66.9, 305.0], [67.0, 305.0], [67.1, 305.0], [67.2, 305.0], [67.3, 305.0], [67.4, 305.0], [67.5, 305.0], [67.6, 305.0], [67.7, 305.0], [67.8, 305.0], [67.9, 305.0], [68.0, 305.0], [68.1, 305.0], [68.2, 305.0], [68.3, 305.0], [68.4, 305.0], [68.5, 305.0], [68.6, 305.0], [68.7, 306.0], [68.8, 306.0], [68.9, 306.0], [69.0, 306.0], [69.1, 306.0], [69.2, 306.0], [69.3, 306.0], [69.4, 306.0], [69.5, 306.0], [69.6, 306.0], [69.7, 306.0], [69.8, 306.0], [69.9, 306.0], [70.0, 306.0], [70.1, 306.0], [70.2, 306.0], [70.3, 306.0], [70.4, 306.0], [70.5, 306.0], [70.6, 306.0], [70.7, 306.0], [70.8, 306.0], [70.9, 306.0], [71.0, 306.0], [71.1, 306.0], [71.2, 306.0], [71.3, 306.0], [71.4, 306.0], [71.5, 306.0], [71.6, 306.0], [71.7, 306.0], [71.8, 306.0], [71.9, 306.0], [72.0, 306.0], [72.1, 306.0], [72.2, 306.0], [72.3, 306.0], [72.4, 306.0], [72.5, 306.0], [72.6, 306.0], [72.7, 306.0], [72.8, 307.0], [72.9, 307.0], [73.0, 307.0], [73.1, 307.0], [73.2, 307.0], [73.3, 307.0], [73.4, 307.0], [73.5, 307.0], [73.6, 307.0], [73.7, 307.0], [73.8, 307.0], [73.9, 307.0], [74.0, 307.0], [74.1, 307.0], [74.2, 307.0], [74.3, 307.0], [74.4, 307.0], [74.5, 307.0], [74.6, 307.0], [74.7, 307.0], [74.8, 307.0], [74.9, 307.0], [75.0, 307.0], [75.1, 307.0], [75.2, 307.0], [75.3, 307.0], [75.4, 307.0], [75.5, 307.0], [75.6, 307.0], [75.7, 307.0], [75.8, 307.0], [75.9, 307.0], [76.0, 307.0], [76.1, 307.0], [76.2, 308.0], [76.3, 308.0], [76.4, 308.0], [76.5, 308.0], [76.6, 308.0], [76.7, 308.0], [76.8, 308.0], [76.9, 308.0], [77.0, 308.0], [77.1, 308.0], [77.2, 308.0], [77.3, 308.0], [77.4, 308.0], [77.5, 308.0], [77.6, 308.0], [77.7, 308.0], [77.8, 308.0], [77.9, 308.0], [78.0, 308.0], [78.1, 308.0], [78.2, 308.0], [78.3, 308.0], [78.4, 308.0], [78.5, 308.0], [78.6, 308.0], [78.7, 308.0], [78.8, 308.0], [78.9, 308.0], [79.0, 308.0], [79.1, 308.0], [79.2, 309.0], [79.3, 309.0], [79.4, 309.0], [79.5, 309.0], [79.6, 309.0], [79.7, 309.0], [79.8, 309.0], [79.9, 309.0], [80.0, 309.0], [80.1, 309.0], [80.2, 309.0], [80.3, 309.0], [80.4, 309.0], [80.5, 309.0], [80.6, 309.0], [80.7, 309.0], [80.8, 309.0], [80.9, 309.0], [81.0, 309.0], [81.1, 309.0], [81.2, 309.0], [81.3, 309.0], [81.4, 309.0], [81.5, 309.0], [81.6, 309.0], [81.7, 309.0], [81.8, 309.0], [81.9, 310.0], [82.0, 310.0], [82.1, 310.0], [82.2, 310.0], [82.3, 310.0], [82.4, 310.0], [82.5, 310.0], [82.6, 310.0], [82.7, 310.0], [82.8, 310.0], [82.9, 310.0], [83.0, 310.0], [83.1, 310.0], [83.2, 310.0], [83.3, 310.0], [83.4, 310.0], [83.5, 310.0], [83.6, 310.0], [83.7, 310.0], [83.8, 310.0], [83.9, 310.0], [84.0, 310.0], [84.1, 310.0], [84.2, 311.0], [84.3, 311.0], [84.4, 311.0], [84.5, 311.0], [84.6, 311.0], [84.7, 311.0], [84.8, 311.0], [84.9, 311.0], [85.0, 311.0], [85.1, 311.0], [85.2, 311.0], [85.3, 311.0], [85.4, 311.0], [85.5, 311.0], [85.6, 311.0], [85.7, 311.0], [85.8, 311.0], [85.9, 311.0], [86.0, 311.0], [86.1, 311.0], [86.2, 312.0], [86.3, 312.0], [86.4, 312.0], [86.5, 312.0], [86.6, 312.0], [86.7, 312.0], [86.8, 312.0], [86.9, 312.0], [87.0, 312.0], [87.1, 312.0], [87.2, 312.0], [87.3, 312.0], [87.4, 313.0], [87.5, 313.0], [87.6, 313.0], [87.7, 313.0], [87.8, 313.0], [87.9, 313.0], [88.0, 313.0], [88.1, 313.0], [88.2, 313.0], [88.3, 313.0], [88.4, 313.0], [88.5, 313.0], [88.6, 313.0], [88.7, 313.0], [88.8, 313.0], [88.9, 314.0], [89.0, 314.0], [89.1, 314.0], [89.2, 314.0], [89.3, 314.0], [89.4, 314.0], [89.5, 314.0], [89.6, 314.0], [89.7, 314.0], [89.8, 314.0], [89.9, 314.0], [90.0, 315.0], [90.1, 315.0], [90.2, 315.0], [90.3, 315.0], [90.4, 315.0], [90.5, 315.0], [90.6, 315.0], [90.7, 315.0], [90.8, 315.0], [90.9, 315.0], [91.0, 315.0], [91.1, 316.0], [91.2, 316.0], [91.3, 316.0], [91.4, 316.0], [91.5, 316.0], [91.6, 317.0], [91.7, 317.0], [91.8, 317.0], [91.9, 317.0], [92.0, 317.0], [92.1, 317.0], [92.2, 317.0], [92.3, 317.0], [92.4, 318.0], [92.5, 318.0], [92.6, 318.0], [92.7, 318.0], [92.8, 319.0], [92.9, 319.0], [93.0, 319.0], [93.1, 319.0], [93.2, 319.0], [93.3, 320.0], [93.4, 320.0], [93.5, 320.0], [93.6, 320.0], [93.7, 320.0], [93.8, 322.0], [93.9, 322.0], [94.0, 323.0], [94.1, 323.0], [94.2, 323.0], [94.3, 323.0], [94.4, 324.0], [94.5, 324.0], [94.6, 325.0], [94.7, 326.0], [94.8, 326.0], [94.9, 328.0], [95.0, 329.0], [95.1, 330.0], [95.2, 331.0], [95.3, 331.0], [95.4, 332.0], [95.5, 333.0], [95.6, 334.0], [95.7, 335.0], [95.8, 337.0], [95.9, 338.0], [96.0, 344.0], [96.1, 348.0], [96.2, 350.0], [96.3, 706.0], [96.4, 738.0], [96.5, 969.0], [96.6, 1010.0], [96.7, 1020.0], [96.8, 1279.0], [96.9, 1281.0], [97.0, 1285.0], [97.1, 1289.0], [97.2, 2280.0], [97.3, 2282.0], [97.4, 2282.0], [97.5, 2283.0], [97.6, 2285.0], [97.7, 2288.0], [97.8, 2290.0], [97.9, 3277.0], [98.0, 3278.0], [98.1, 3279.0], [98.2, 3280.0], [98.3, 3280.0], [98.4, 3281.0], [98.5, 3281.0], [98.6, 3282.0], [98.7, 3282.0], [98.8, 3283.0], [98.9, 3283.0], [99.0, 3284.0], [99.1, 3285.0], [99.2, 4283.0], [99.3, 6281.0], [99.4, 6282.0], [99.5, 6282.0], [99.6, 6282.0], [99.7, 6283.0], [99.8, 6289.0], [99.9, 6290.0]], "isOverall": false, "label": "Search User", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 1368.0, "series": [{"data": [[2100.0, 46.0], [2200.0, 2.0], [2400.0, 1.0], [2500.0, 1.0], [2700.0, 3.0], [3100.0, 43.0], [3300.0, 2.0], [3200.0, 1.0], [3400.0, 2.0], [4100.0, 44.0], [1100.0, 1368.0], [1200.0, 435.0], [5100.0, 1.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 5.0], [6100.0, 1.0], [1600.0, 1.0], [1700.0, 6.0], [7100.0, 16.0], [1800.0, 5.0], [1900.0, 8.0], [2000.0, 5.0]], "isOverall": false, "label": "Login User", "isController": false}, {"data": [[4200.0, 1.0], [2200.0, 12.0], [2300.0, 1.0], [300.0, 625.0], [1200.0, 6.0], [700.0, 1.0], [6200.0, 6.0], [200.0, 1307.0], [3200.0, 30.0], [3300.0, 1.0], [900.0, 2.0], [1000.0, 8.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[4200.0, 2.0], [2200.0, 15.0], [300.0, 916.0], [1200.0, 7.0], [700.0, 5.0], [6200.0, 13.0], [200.0, 1009.0], [3200.0, 26.0], [900.0, 2.0], [7200.0, 1.0], [1000.0, 4.0]], "isOverall": false, "label": "Search User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 98.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3846.0, "series": [{"data": [[0.0, 3846.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1834.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 222.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 98.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.4, "minX": 1.7499744E12, "maxY": 117.08508403361346, "series": [{"data": [[1.7499744E12, 9.399999999999999], [1.74997446E12, 12.53333333333334]], "isOverall": false, "label": "TG-100", "isController": false}, {"data": [[1.7499744E12, 52.438202247191], [1.74997446E12, 70.24868035190619], [1.74997452E12, 3.0]], "isOverall": false, "label": "TG-600", "isController": false}, {"data": [[1.7499744E12, 23.957446808510635], [1.74997446E12, 35.03891509433964], [1.74997452E12, 2.4]], "isOverall": false, "label": "TG-300", "isController": false}, {"data": [[1.7499744E12, 84.5071428571429], [1.74997446E12, 117.08508403361346], [1.74997452E12, 2.5]], "isOverall": false, "label": "TG-1000", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74997452E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 276.0, "minX": 1.0, "maxY": 6290.0, "series": [{"data": [[52.0, 1137.0], [68.0, 1136.0], [76.0, 1622.75], [78.0, 1216.0], [81.0, 1128.0], [84.0, 1257.0], [85.0, 1206.0], [87.0, 1193.0], [86.0, 1127.0], [91.0, 1237.0], [95.0, 1208.0], [93.0, 1140.0], [98.0, 1194.0], [99.0, 1184.5], [97.0, 1145.0], [103.0, 1152.0], [107.0, 1186.5], [106.0, 1138.5], [114.0, 1256.0], [118.0, 1205.6666666666667], [119.0, 1213.0], [117.0, 1131.0], [120.0, 1198.1666666666667], [121.0, 1167.0], [122.0, 1155.25], [124.0, 1182.0], [125.0, 1192.0], [127.0, 1213.5], [128.0, 1208.0], [129.0, 1218.0], [131.0, 1198.5714285714287], [133.0, 1195.0], [134.0, 1222.0], [135.0, 1187.75], [137.0, 1156.5], [138.0, 1194.0], [140.0, 1195.0], [141.0, 1168.0], [144.0, 1176.5], [147.0, 1201.6666666666667], [148.0, 1185.0], [149.0, 1164.8], [151.0, 1221.0], [146.0, 1142.0], [152.0, 1157.25], [154.0, 1194.5], [156.0, 1178.5], [157.0, 1180.0], [158.0, 1182.0], [155.0, 1105.0], [153.0, 1142.0], [160.0, 1159.0], [161.0, 1204.0], [162.0, 1158.5], [163.0, 1202.0], [164.0, 1183.0], [167.0, 1235.0], [172.0, 1167.6666666666667], [173.0, 1183.0], [175.0, 1142.6666666666667], [171.0, 1122.0], [176.0, 1184.0], [179.0, 1175.0], [180.0, 1173.6666666666667], [182.0, 1215.0], [183.0, 1141.3333333333333], [184.0, 1217.0], [186.0, 1616.75], [185.0, 1198.0], [187.0, 1190.25], [188.0, 1201.0], [189.0, 1157.5], [190.0, 1187.0], [191.0, 1219.3333333333333], [192.0, 1175.5], [194.0, 1200.0], [196.0, 1188.0], [197.0, 1152.75], [199.0, 1140.75], [198.0, 1189.5], [200.0, 1170.3333333333333], [202.0, 1195.0], [201.0, 1138.8], [203.0, 1152.5], [204.0, 1190.6], [205.0, 1210.0], [206.0, 1199.6666666666667], [207.0, 1194.6], [208.0, 1202.625], [210.0, 1714.25], [211.0, 1198.5], [212.0, 1146.75], [213.0, 1191.0], [214.0, 1168.3333333333333], [215.0, 1201.5], [209.0, 1117.0], [217.0, 1237.2], [218.0, 1216.5714285714284], [216.0, 1368.5], [220.0, 1240.6176470588232], [219.0, 1169.1538461538462], [221.0, 1172.2], [222.0, 1192.3055555555552], [223.0, 1169.3191489361702], [225.0, 1201.735632183908], [226.0, 1214.2201834862387], [224.0, 1173.892857142857], [227.0, 1222.9913793103447], [228.0, 1191.2900000000006], [230.0, 1201.025], [231.0, 1190.7536231884058], [229.0, 1199.3277310924373], [232.0, 1219.4657534246574], [233.0, 1275.1707317073174], [234.0, 1183.3103448275863], [235.0, 1189.0370370370372], [237.0, 1168.6666666666667], [238.0, 1188.3333333333333], [239.0, 1206.6], [236.0, 1174.9565217391307], [240.0, 1147.857142857143], [241.0, 1257.4285714285713], [242.0, 1331.1999999999998], [244.0, 1346.8], [245.0, 1126.0], [246.0, 1132.3333333333333], [243.0, 1294.6666666666667], [255.0, 2608.0], [254.0, 1126.5], [252.0, 1237.7499999999998], [253.0, 1134.5], [251.0, 1298.0], [249.0, 1121.0], [250.0, 1127.5], [271.0, 3633.5], [270.0, 1137.0], [267.0, 1123.1249999999998], [268.0, 2934.0], [264.0, 1495.0], [266.0, 1129.0], [265.0, 1124.3333333333333], [263.0, 1910.0], [257.0, 1378.8], [256.0, 1117.25], [258.0, 1788.888888888889], [259.0, 1648.8823529411764], [261.0, 1123.0], [260.0, 1789.5555555555554], [286.0, 1118.0], [287.0, 1129.0], [285.0, 1134.0], [274.0, 2127.5], [273.0, 1143.0], [272.0, 2140.0], [282.0, 1127.3333333333333], [281.0, 1130.5], [279.0, 2644.5], [280.0, 1127.5], [277.0, 1132.0], [276.0, 1128.0], [291.0, 1127.5], [301.0, 5613.0], [300.0, 1133.0], [298.0, 2465.8333333333335], [299.0, 1139.0], [302.0, 1141.5], [295.0, 1133.0], [294.0, 1145.0], [292.0, 1134.5], [290.0, 2325.0], [289.0, 1146.0], [288.0, 1132.0], [319.0, 2134.75], [318.0, 1133.0], [314.0, 1131.3333333333335], [316.0, 1321.0], [315.0, 1134.6], [312.0, 3125.0], [313.0, 1153.0], [307.0, 3703.571428571429], [308.0, 4131.5], [304.0, 1133.0], [306.0, 2618.5], [332.0, 1732.6], [334.0, 4142.0], [333.0, 2628.5], [331.0, 3016.777777777778], [329.0, 2878.0624999999995], [328.0, 3796.6666666666665], [327.0, 2786.3333333333335], [326.0, 2387.25], [324.0, 1775.2857142857144], [325.0, 2117.0], [323.0, 1464.0000000000005], [322.0, 2108.789473684211], [321.0, 1130.0], [320.0, 1137.6666666666667], [341.0, 2575.4444444444443], [342.0, 3393.7333333333336], [340.0, 2802.5833333333335], [343.0, 2733.8], [338.0, 1635.5], [336.0, 3309.4545454545455]], "isOverall": false, "label": "Login User", "isController": false}, {"data": [[233.89349999999985, 1368.6429999999998]], "isOverall": false, "label": "Login User-Aggregated", "isController": false}, {"data": [[9.0, 283.0], [10.0, 294.0], [11.0, 283.0], [20.0, 286.0], [30.0, 283.5], [37.0, 292.0], [36.0, 282.0], [39.0, 281.0], [43.0, 282.0], [42.0, 284.5], [59.0, 281.0], [61.0, 286.0], [65.0, 287.0], [64.0, 280.5], [69.0, 279.6666666666667], [75.0, 282.3333333333333], [73.0, 286.0], [76.0, 279.5], [82.0, 285.0], [81.0, 280.8], [87.0, 276.0], [90.0, 302.0], [91.0, 283.0], [88.0, 282.0], [95.0, 278.0], [92.0, 281.0], [98.0, 286.0], [101.0, 284.0], [107.0, 303.0], [106.0, 282.0], [110.0, 286.0], [111.0, 282.0], [114.0, 301.0], [115.0, 301.0], [113.0, 286.0], [119.0, 284.0], [122.0, 278.0], [127.0, 297.0], [126.0, 289.0], [125.0, 282.0], [135.0, 294.0], [134.0, 280.0], [131.0, 281.0], [129.0, 289.0], [140.0, 288.5], [141.0, 280.6666666666667], [138.0, 283.0], [136.0, 282.0], [144.0, 285.0], [145.0, 291.75], [146.0, 290.5], [149.0, 296.75], [151.0, 284.0], [152.0, 304.0], [153.0, 284.75], [154.0, 301.0], [155.0, 306.0], [157.0, 296.0], [158.0, 294.0], [159.0, 298.0], [156.0, 281.0], [162.0, 304.5], [163.0, 305.0], [164.0, 297.0], [165.0, 291.0], [166.0, 305.0], [167.0, 297.0], [161.0, 281.3333333333333], [160.0, 279.2], [168.0, 316.0], [171.0, 285.75], [173.0, 290.5], [175.0, 282.0], [176.0, 314.0], [177.0, 304.0], [180.0, 290.5], [183.0, 282.0], [179.0, 281.3333333333333], [184.0, 288.75], [187.0, 302.5], [186.0, 298.0], [188.0, 286.0], [190.0, 286.0], [191.0, 300.4], [189.0, 285.0], [185.0, 282.3333333333333], [193.0, 298.0], [194.0, 304.5], [196.0, 288.3333333333333], [197.0, 289.5], [198.0, 292.1000000000001], [199.0, 298.0], [195.0, 282.0], [200.0, 293.57142857142856], [201.0, 297.0], [202.0, 303.0], [203.0, 297.75], [204.0, 298.71428571428567], [205.0, 295.33333333333337], [207.0, 299.6], [206.0, 304.5], [208.0, 301.25], [209.0, 300.0], [211.0, 301.125], [210.0, 294.14285714285717], [214.0, 294.5], [215.0, 301.75], [212.0, 280.6666666666667], [216.0, 296.8888888888889], [219.0, 296.30000000000007], [217.0, 299.6], [220.0, 297.29999999999995], [221.0, 295.1166666666667], [222.0, 304.71428571428584], [223.0, 300.91764705882355], [218.0, 297.38461538461536], [224.0, 300.0813953488372], [225.0, 299.62222222222215], [226.0, 301.15094339622647], [227.0, 295.0747663551399], [228.0, 301.60185185185185], [231.0, 302.1797752808989], [230.0, 299.2345679012347], [229.0, 302.99999999999994], [232.0, 298.06], [233.0, 298.5], [234.0, 297.7333333333334], [235.0, 308.0], [236.0, 322.9677419354839], [237.0, 296.6], [238.0, 301.1538461538462], [239.0, 298.7142857142857], [240.0, 285.375], [241.0, 287.55555555555554], [242.0, 282.8666666666666], [243.0, 287.33333333333337], [244.0, 285.36363636363643], [247.0, 282.0], [245.0, 281.3333333333333], [254.0, 281.0], [255.0, 281.0], [253.0, 384.14285714285717], [252.0, 398.5], [251.0, 283.125], [249.0, 287.5], [250.0, 283.4], [271.0, 279.75], [268.0, 282.0], [267.0, 279.0], [269.0, 282.25], [266.0, 284.0], [265.0, 284.0], [264.0, 282.5], [262.0, 280.6666666666667], [261.0, 279.5], [260.0, 281.42857142857144], [263.0, 283.0], [256.0, 280.6666666666667], [258.0, 281.7857142857143], [259.0, 281.4615384615385], [257.0, 284.9], [286.0, 281.6666666666667], [287.0, 281.5], [285.0, 279.0], [284.0, 282.5], [283.0, 285.0], [282.0, 280.6666666666667], [281.0, 280.75], [279.0, 280.3333333333333], [273.0, 278.0], [272.0, 285.0], [278.0, 286.0], [277.0, 281.0], [276.0, 284.0], [280.0, 279.0], [302.0, 3279.0], [303.0, 2282.6666666666665], [300.0, 282.6666666666667], [301.0, 1483.0], [298.0, 282.5], [299.0, 282.0], [296.0, 283.0], [294.0, 281.0], [291.0, 280.5], [289.0, 296.5], [288.0, 283.0], [290.0, 283.5], [293.0, 284.0], [292.0, 1032.5], [318.0, 281.2], [319.0, 880.2], [317.0, 287.0], [316.0, 286.5], [315.0, 284.0], [314.0, 279.8333333333333], [312.0, 1783.0], [313.0, 285.0], [310.0, 283.6666666666667], [308.0, 1482.8], [309.0, 282.0], [307.0, 286.25], [306.0, 280.0], [305.0, 283.5], [333.0, 2031.25], [334.0, 3283.0], [332.0, 2282.0], [331.0, 3280.0], [329.0, 1030.875], [328.0, 790.0], [327.0, 1781.0], [326.0, 4280.0], [324.0, 425.9285714285714], [323.0, 723.0400000000001], [322.0, 517.0588235294117], [321.0, 280.77777777777777], [320.0, 281.3333333333333], [339.0, 2290.0], [340.0, 3118.166666666667], [341.0, 2532.625], [343.0, 1629.5], [342.0, 2890.0], [337.0, 3291.5], [338.0, 1278.0], [336.0, 2284.75]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[231.2579999999997, 378.78500000000037]], "isOverall": false, "label": "Create User-Aggregated", "isController": false}, {"data": [[2.0, 288.0], [3.0, 280.0], [4.0, 284.0], [5.0, 281.0], [6.0, 282.0], [7.0, 284.0], [8.0, 293.0], [9.0, 281.0], [10.0, 283.0], [11.0, 286.0], [12.0, 281.0], [13.0, 279.0], [14.0, 279.0], [15.0, 284.0], [16.0, 287.0], [17.0, 284.0], [18.0, 290.0], [19.0, 285.0], [20.0, 284.0], [21.0, 282.0], [22.0, 281.0], [23.0, 282.0], [24.0, 282.0], [25.0, 281.0], [26.0, 287.0], [27.0, 281.0], [28.0, 285.0], [29.0, 281.0], [30.0, 283.0], [31.0, 277.0], [33.0, 284.0], [32.0, 282.0], [35.0, 286.0], [34.0, 286.0], [37.0, 288.0], [36.0, 282.0], [39.0, 284.0], [38.0, 278.0], [41.0, 280.0], [40.0, 277.0], [43.0, 278.0], [42.0, 282.0], [45.0, 281.0], [44.0, 281.0], [47.0, 279.0], [46.0, 285.0], [49.0, 284.0], [48.0, 280.0], [51.0, 287.0], [50.0, 284.0], [53.0, 280.0], [52.0, 280.0], [55.0, 282.0], [54.0, 278.0], [57.0, 279.0], [56.0, 277.0], [59.0, 279.0], [58.0, 283.0], [61.0, 279.0], [60.0, 284.0], [63.0, 278.0], [62.0, 285.0], [67.0, 286.0], [66.0, 283.0], [65.0, 276.0], [64.0, 278.0], [71.0, 280.0], [70.0, 277.0], [69.0, 285.0], [68.0, 282.0], [75.0, 283.0], [74.0, 284.0], [73.0, 287.0], [72.0, 276.0], [79.0, 280.0], [78.0, 286.0], [77.0, 282.0], [76.0, 280.0], [83.0, 281.0], [82.0, 283.0], [81.0, 281.0], [80.0, 280.0], [87.0, 277.0], [86.0, 278.0], [85.0, 279.0], [84.0, 281.0], [91.0, 288.6666666666667], [88.0, 282.0], [95.0, 280.0], [94.0, 284.0], [93.0, 282.0], [92.0, 283.0], [99.0, 284.0], [98.0, 287.0], [97.0, 282.0], [96.0, 277.0], [103.0, 280.0], [102.0, 281.0], [101.0, 283.0], [100.0, 287.0], [107.0, 279.0], [106.0, 283.0], [105.0, 288.0], [104.0, 281.0], [111.0, 283.0], [110.0, 281.0], [109.0, 283.0], [108.0, 286.0], [115.0, 285.0], [114.0, 281.0], [113.0, 294.0], [112.0, 282.0], [119.0, 281.0], [118.0, 278.0], [117.0, 282.0], [116.0, 280.0], [123.0, 291.0], [122.0, 280.0], [121.0, 281.0], [120.0, 282.0], [127.0, 280.0], [126.0, 279.0], [125.0, 281.0], [124.0, 281.0], [135.0, 277.0], [134.0, 280.0], [133.0, 284.0], [132.0, 311.0], [131.0, 277.0], [130.0, 284.0], [129.0, 285.0], [128.0, 279.0], [143.0, 278.0], [142.0, 277.0], [141.0, 282.0], [140.0, 278.0], [139.0, 279.0], [138.0, 288.0], [137.0, 285.0], [136.0, 286.0], [147.0, 290.0], [150.0, 295.5], [151.0, 290.0], [149.0, 279.0], [148.0, 283.0], [146.0, 287.0], [145.0, 284.0], [144.0, 279.0], [156.0, 296.5], [159.0, 280.0], [158.0, 285.0], [157.0, 278.0], [155.0, 285.0], [154.0, 282.0], [153.0, 284.0], [152.0, 279.0], [167.0, 290.0], [166.0, 278.0], [165.0, 284.0], [164.0, 293.0], [163.0, 281.0], [162.0, 281.0], [161.0, 286.0], [160.0, 286.0], [175.0, 296.0], [174.0, 279.0], [173.0, 279.0], [172.0, 279.0], [171.0, 277.0], [170.0, 284.0], [169.0, 288.0], [168.0, 284.0], [180.0, 297.0], [179.0, 291.0], [183.0, 283.0], [182.0, 283.0], [181.0, 281.0], [178.0, 282.0], [177.0, 281.0], [176.0, 283.0], [186.0, 304.25], [185.0, 293.5], [184.0, 293.0], [187.0, 299.8], [191.0, 296.5], [190.0, 284.0], [189.0, 282.0], [188.0, 282.0], [193.0, 309.0], [195.0, 298.3333333333333], [197.0, 294.0], [199.0, 303.25], [198.0, 280.0], [196.0, 280.0], [194.0, 285.5], [192.0, 287.0], [202.0, 299.8], [203.0, 292.5], [205.0, 302.0], [207.0, 300.33333333333337], [206.0, 292.5], [204.0, 296.0], [201.0, 282.0], [200.0, 281.0], [208.0, 301.6666666666667], [209.0, 292.5], [211.0, 306.8333333333333], [213.0, 291.5], [215.0, 300.6], [214.0, 278.0], [212.0, 281.0], [210.0, 279.0], [216.0, 299.85714285714283], [218.0, 305.0714285714286], [219.0, 302.2142857142857], [217.0, 303.0], [220.0, 301.8157894736842], [221.0, 303.2765957446809], [222.0, 310.47142857142853], [223.0, 298.8289473684209], [226.0, 299.37234042553195], [225.0, 303.6585365853659], [224.0, 297.2857142857142], [227.0, 303.5754716981134], [231.0, 313.83908045977006], [230.0, 303.52941176470586], [229.0, 301.3020833333335], [228.0, 303.4545454545455], [233.0, 305.1803278688525], [232.0, 306.8], [234.0, 322.91666666666663], [236.0, 334.75], [235.0, 308.87999999999994], [238.0, 365.27272727272725], [239.0, 300.44444444444446], [237.0, 295.6923076923077], [240.0, 291.2727272727273], [243.0, 287.0625], [244.0, 288.62500000000006], [242.0, 336.6153846153846], [241.0, 287.2857142857143], [247.0, 282.6666666666667], [246.0, 280.5], [245.0, 281.3333333333333], [255.0, 283.33333333333337], [254.0, 282.0], [253.0, 364.6], [252.0, 283.55555555555554], [251.0, 281.28571428571433], [250.0, 283.5], [249.0, 277.0], [248.0, 278.0], [270.0, 283.0], [271.0, 278.0], [269.0, 281.5], [268.0, 281.2], [267.0, 284.25], [266.0, 281.0], [265.0, 282.5], [263.0, 2282.3333333333335], [257.0, 282.09090909090907], [256.0, 1780.75], [259.0, 281.71428571428567], [258.0, 283.0], [262.0, 279.5], [261.0, 279.1428571428571], [260.0, 281.21428571428567], [286.0, 3284.5], [287.0, 284.0], [285.0, 280.3333333333333], [284.0, 279.3333333333333], [283.0, 280.5], [282.0, 281.16666666666663], [280.0, 282.0], [281.0, 284.6666666666667], [279.0, 3783.0], [273.0, 278.0], [272.0, 282.3333333333333], [275.0, 282.75], [274.0, 278.0], [278.0, 281.5], [277.0, 276.0], [276.0, 283.0], [302.0, 280.6666666666667], [303.0, 284.5], [301.0, 949.7777777777778], [300.0, 282.8], [299.0, 282.5], [298.0, 282.0], [297.0, 280.0], [296.0, 279.0], [295.0, 285.0], [289.0, 281.4], [288.0, 283.5], [291.0, 1285.1666666666667], [290.0, 281.0], [294.0, 286.0], [293.0, 282.6666666666667], [292.0, 283.16666666666663], [318.0, 284.0], [319.0, 884.0], [317.0, 283.0], [316.0, 281.0], [315.0, 279.8], [314.0, 282.5], [313.0, 281.0], [312.0, 6282.0], [311.0, 284.0], [305.0, 3282.0], [304.0, 285.0], [307.0, 286.0], [306.0, 276.0], [310.0, 6290.0], [309.0, 6281.333333333333], [308.0, 4282.666666666667], [334.0, 2288.0], [335.0, 3280.0], [333.0, 1784.5], [332.0, 2282.75], [331.0, 3283.5], [330.0, 2282.0], [329.0, 2781.0], [328.0, 1946.3333333333335], [327.0, 3788.5], [321.0, 1280.5], [320.0, 1032.5], [323.0, 814.4666666666666], [322.0, 534.25], [326.0, 278.0], [325.0, 2615.6666666666665], [324.0, 406.375], [341.0, 1949.0000000000002], [343.0, 2283.0], [342.0, 1954.0], [340.0, 1782.0], [339.0, 285.0], [338.0, 2781.5], [337.0, 3281.0], [336.0, 1281.0], [1.0, 286.0]], "isOverall": false, "label": "Search User", "isController": false}, {"data": [[226.10850000000005, 402.5739999999997]], "isOverall": false, "label": "Search User-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 343.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 75.93333333333334, "minX": 1.7499744E12, "maxY": 81509.26666666666, "series": [{"data": [[1.7499744E12, 4052.2166666666667], [1.74997446E12, 81509.26666666666], [1.74997452E12, 222.56666666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7499744E12, 1747.05], [1.74997446E12, 33177.85], [1.74997452E12, 75.93333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74997452E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 284.08333333333337, "minX": 1.7499744E12, "maxY": 1380.3491891891897, "series": [{"data": [[1.7499744E12, 1224.2666666666669], [1.74997446E12, 1380.3491891891897]], "isOverall": false, "label": "Login User", "isController": false}, {"data": [[1.7499744E12, 301.6354166666666], [1.74997446E12, 382.8264071541298], [1.74997452E12, 286.6666666666667]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.7499744E12, 306.3555555555556], [1.74997446E12, 405.5342254246011], [1.74997452E12, 284.08333333333337]], "isOverall": false, "label": "Search User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74997452E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 284.08333333333337, "minX": 1.7499744E12, "maxY": 1380.3405405405395, "series": [{"data": [[1.7499744E12, 1223.9600000000005], [1.74997446E12, 1380.3405405405395]], "isOverall": false, "label": "Login User", "isController": false}, {"data": [[1.7499744E12, 301.6041666666667], [1.74997446E12, 382.8116780641762], [1.74997452E12, 286.6666666666667]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.7499744E12, 306.31111111111113], [1.74997446E12, 405.52444673185875], [1.74997452E12, 284.08333333333337]], "isOverall": false, "label": "Search User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74997452E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7499744E12, "maxY": 912.0066666666669, "series": [{"data": [[1.7499744E12, 912.0066666666669], [1.74997446E12, 901.3394594594607]], "isOverall": false, "label": "Login User", "isController": false}, {"data": [[1.7499744E12, 0.0], [1.74997446E12, 0.0], [1.74997452E12, 0.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.7499744E12, 0.0], [1.74997446E12, 0.0], [1.74997452E12, 0.0]], "isOverall": false, "label": "Search User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74997452E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 274.0, "minX": 1.7499744E12, "maxY": 7164.0, "series": [{"data": [[1.7499744E12, 2026.0], [1.74997446E12, 7164.0], [1.74997452E12, 294.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7499744E12, 1216.8], [1.74997446E12, 1201.0], [1.74997452E12, 293.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7499744E12, 1814.1199999999967], [1.74997446E12, 3288.0], [1.74997452E12, 294.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7499744E12, 1234.0], [1.74997446E12, 1223.1499999999996], [1.74997452E12, 294.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7499744E12, 293.0], [1.74997446E12, 274.0], [1.74997452E12, 280.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7499744E12, 1179.0], [1.74997446E12, 304.0], [1.74997452E12, 283.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74997452E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 281.0, "minX": 1.0, "maxY": 7114.0, "series": [{"data": [[3.0, 284.0], [5.0, 754.5], [6.0, 283.0], [12.0, 284.0], [17.0, 1193.0], [20.0, 1109.0], [29.0, 282.0], [41.0, 281.0], [50.0, 282.0], [56.0, 748.0], [59.0, 1198.0], [61.0, 309.0], [71.0, 283.0], [77.0, 310.0], [81.0, 308.0], [82.0, 290.5], [84.0, 284.0], [86.0, 283.5], [90.0, 310.0], [89.0, 306.0], [91.0, 293.0], [93.0, 307.0], [94.0, 312.5], [95.0, 301.0], [92.0, 289.0], [98.0, 306.0], [99.0, 308.0], [96.0, 304.5], [97.0, 283.0], [102.0, 305.0], [100.0, 309.5], [101.0, 303.0], [107.0, 304.0], [105.0, 304.0], [104.0, 307.5], [108.0, 313.0], [109.0, 308.0], [110.0, 285.0], [112.0, 311.0], [115.0, 306.0], [113.0, 307.0], [114.0, 284.0], [119.0, 282.0], [118.0, 283.0], [122.0, 284.0], [132.0, 284.5], [134.0, 283.5], [143.0, 3126.0], [140.0, 285.0], [137.0, 283.0], [175.0, 1139.0], [1.0, 286.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[143.0, 2288.0], [140.0, 6283.0], [137.0, 6285.0], [20.0, 1140.0], [175.0, 3279.0], [98.0, 7114.0], [107.0, 6702.5], [122.0, 281.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 175.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 281.0, "minX": 1.0, "maxY": 7114.0, "series": [{"data": [[3.0, 284.0], [5.0, 754.5], [6.0, 283.0], [12.0, 284.0], [17.0, 1193.0], [20.0, 1109.0], [29.0, 282.0], [41.0, 281.0], [50.0, 282.0], [56.0, 748.0], [59.0, 1198.0], [61.0, 309.0], [71.0, 283.0], [77.0, 310.0], [81.0, 308.0], [82.0, 290.5], [84.0, 284.0], [86.0, 283.0], [90.0, 310.0], [89.0, 306.0], [91.0, 293.0], [93.0, 307.0], [94.0, 312.5], [95.0, 301.0], [92.0, 289.0], [98.0, 306.0], [99.0, 308.0], [96.0, 304.5], [97.0, 283.0], [102.0, 305.0], [100.0, 309.5], [101.0, 303.0], [107.0, 304.0], [105.0, 304.0], [104.0, 307.5], [108.0, 313.0], [109.0, 308.0], [110.0, 285.0], [112.0, 311.0], [115.0, 306.0], [113.0, 307.0], [114.0, 284.0], [119.0, 282.0], [118.0, 283.0], [122.0, 284.0], [132.0, 284.5], [134.0, 283.5], [143.0, 3126.0], [140.0, 285.0], [137.0, 283.0], [175.0, 1139.0], [1.0, 286.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[143.0, 2288.0], [140.0, 6283.0], [137.0, 6285.0], [20.0, 1140.0], [175.0, 3279.0], [98.0, 7114.0], [107.0, 6702.5], [122.0, 281.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 175.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.7499744E12, "maxY": 93.85, "series": [{"data": [[1.7499744E12, 5.933333333333334], [1.74997446E12, 93.85], [1.74997452E12, 0.21666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74997452E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.7499744E12, "maxY": 93.26666666666667, "series": [{"data": [[1.7499744E12, 4.85], [1.74997446E12, 93.26666666666667], [1.74997452E12, 0.25]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.74997446E12, 0.38333333333333336]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.74997446E12, 1.25]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74997452E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.7499744E12, "maxY": 31.566666666666666, "series": [{"data": [[1.7499744E12, 2.5], [1.74997446E12, 30.566666666666666]], "isOverall": false, "label": "Login User-success", "isController": false}, {"data": [[1.74997446E12, 0.26666666666666666]], "isOverall": false, "label": "Login User-failure", "isController": false}, {"data": [[1.7499744E12, 0.75], [1.74997446E12, 31.133333333333333], [1.74997452E12, 0.2]], "isOverall": false, "label": "Search User-success", "isController": false}, {"data": [[1.74997446E12, 0.11666666666666667]], "isOverall": false, "label": "Create User-failure", "isController": false}, {"data": [[1.74997446E12, 1.25]], "isOverall": false, "label": "Search User-failure", "isController": false}, {"data": [[1.7499744E12, 1.6], [1.74997446E12, 31.566666666666666], [1.74997452E12, 0.05]], "isOverall": false, "label": "Create User-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74997452E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.7499744E12, "maxY": 93.26666666666667, "series": [{"data": [[1.7499744E12, 4.85], [1.74997446E12, 93.26666666666667], [1.74997452E12, 0.25]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74997446E12, 1.6333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74997452E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

